/*
* generated by Xtext
*/
package fr.chaunier.xtext.constraint.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import fr.chaunier.xtext.constraint.services.CstDslGrammarAccess;

public class CstDslParser extends AbstractContentAssistParser {
	
	@Inject
	private CstDslGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected fr.chaunier.xtext.constraint.ui.contentassist.antlr.internal.InternalCstDslParser createParser() {
		fr.chaunier.xtext.constraint.ui.contentassist.antlr.internal.InternalCstDslParser result = new fr.chaunier.xtext.constraint.ui.contentassist.antlr.internal.InternalCstDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getSpecificationAccess().getAlternatives(), "rule__Specification__Alternatives");
					put(grammarAccess.getFileSpecificationAccess().getAlternatives(), "rule__FileSpecification__Alternatives");
					put(grammarAccess.getAbstractElementConstraintAccess().getAlternatives(), "rule__AbstractElementConstraint__Alternatives");
					put(grammarAccess.getTypeConstraintAccess().getAlternatives(), "rule__TypeConstraint__Alternatives");
					put(grammarAccess.getConstraintAccess().getAlternatives(), "rule__Constraint__Alternatives");
					put(grammarAccess.getEnumUsageAccess().getAlternatives(), "rule__EnumUsage__Alternatives");
					put(grammarAccess.getDomainModelConstraintAccess().getGroup(), "rule__DomainModelConstraint__Group__0");
					put(grammarAccess.getFileSpecificationAccess().getGroup_3(), "rule__FileSpecification__Group_3__0");
					put(grammarAccess.getFreeSpecificationAccess().getGroup(), "rule__FreeSpecification__Group__0");
					put(grammarAccess.getImportAccess().getGroup(), "rule__Import__Group__0");
					put(grammarAccess.getQualifiedNameWithWildCardAccess().getGroup(), "rule__QualifiedNameWithWildCard__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
					put(grammarAccess.getPackageConstraintAccess().getGroup(), "rule__PackageConstraint__Group__0");
					put(grammarAccess.getPackageConstraintAccess().getGroup_2(), "rule__PackageConstraint__Group_2__0");
					put(grammarAccess.getPackageConstraintAccess().getGroup_3(), "rule__PackageConstraint__Group_3__0");
					put(grammarAccess.getDataTypeConstraintAccess().getGroup(), "rule__DataTypeConstraint__Group__0");
					put(grammarAccess.getEntityConstraintAccess().getGroup(), "rule__EntityConstraint__Group__0");
					put(grammarAccess.getFeatureConstraintAccess().getGroup(), "rule__FeatureConstraint__Group__0");
					put(grammarAccess.getStringConstraintAccess().getGroup(), "rule__StringConstraint__Group__0");
					put(grammarAccess.getStringConstraintAccess().getGroup_2(), "rule__StringConstraint__Group_2__0");
					put(grammarAccess.getDateTimeConstraintAccess().getGroup(), "rule__DateTimeConstraint__Group__0");
					put(grammarAccess.getDateTimeConstraintAccess().getGroup_2(), "rule__DateTimeConstraint__Group_2__0");
					put(grammarAccess.getDecimalConstraintAccess().getGroup(), "rule__DecimalConstraint__Group__0");
					put(grammarAccess.getEnumerationConstraintAccess().getGroup(), "rule__EnumerationConstraint__Group__0");
					put(grammarAccess.getEnumerationConstraintAccess().getGroup_2(), "rule__EnumerationConstraint__Group_2__0");
					put(grammarAccess.getEnumerationConstraintAccess().getGroup_3(), "rule__EnumerationConstraint__Group_3__0");
					put(grammarAccess.getNumberConstraintAccess().getGroup(), "rule__NumberConstraint__Group__0");
					put(grammarAccess.getNumberConstraintAccess().getGroup_0(), "rule__NumberConstraint__Group_0__0");
					put(grammarAccess.getNumberConstraintAccess().getGroup_1(), "rule__NumberConstraint__Group_1__0");
					put(grammarAccess.getNumberConstraintAccess().getGroup_2(), "rule__NumberConstraint__Group_2__0");
					put(grammarAccess.getNumberConstraintAccess().getGroup_3(), "rule__NumberConstraint__Group_3__0");
					put(grammarAccess.getNumberConstraintAccess().getGroup_4(), "rule__NumberConstraint__Group_4__0");
					put(grammarAccess.getNumberConstraintAccess().getGroup_5(), "rule__NumberConstraint__Group_5__0");
					put(grammarAccess.getNumberConstraintAccess().getGroup_6(), "rule__NumberConstraint__Group_6__0");
					put(grammarAccess.getNumberConstraintAccess().getGroup_7(), "rule__NumberConstraint__Group_7__0");
					put(grammarAccess.getNumberConstraintAccess().getGroup_10(), "rule__NumberConstraint__Group_10__0");
					put(grammarAccess.getAllConstraintAccess().getGroup(), "rule__AllConstraint__Group__0");
					put(grammarAccess.getAllConstraintAccess().getGroup_0(), "rule__AllConstraint__Group_0__0");
					put(grammarAccess.getAllConstraintAccess().getGroup_1(), "rule__AllConstraint__Group_1__0");
					put(grammarAccess.getAllConstraintAccess().getGroup_2(), "rule__AllConstraint__Group_2__0");
					put(grammarAccess.getAllConstraintAccess().getGroup_3(), "rule__AllConstraint__Group_3__0");
					put(grammarAccess.getAllConstraintAccess().getGroup_4(), "rule__AllConstraint__Group_4__0");
					put(grammarAccess.getAllConstraintAccess().getGroup_5(), "rule__AllConstraint__Group_5__0");
					put(grammarAccess.getAllConstraintAccess().getGroup_8(), "rule__AllConstraint__Group_8__0");
					put(grammarAccess.getDomainModelConstraintAccess().getImportsAssignment_0(), "rule__DomainModelConstraint__ImportsAssignment_0");
					put(grammarAccess.getDomainModelConstraintAccess().getElementsAssignment_1(), "rule__DomainModelConstraint__ElementsAssignment_1");
					put(grammarAccess.getFileSpecificationAccess().getFormatAssignment_0(), "rule__FileSpecification__FormatAssignment_0");
					put(grammarAccess.getFileSpecificationAccess().getDelimiterAssignment_3_2(), "rule__FileSpecification__DelimiterAssignment_3_2");
					put(grammarAccess.getFreeSpecificationAccess().getLinesAssignment_1(), "rule__FreeSpecification__LinesAssignment_1");
					put(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1(), "rule__Import__ImportedNamespaceAssignment_1");
					put(grammarAccess.getPackageConstraintAccess().getPackageDeclarationAssignment_1(), "rule__PackageConstraint__PackageDeclarationAssignment_1");
					put(grammarAccess.getPackageConstraintAccess().getPrefixAssignment_2_1(), "rule__PackageConstraint__PrefixAssignment_2_1");
					put(grammarAccess.getPackageConstraintAccess().getNamespaceAssignment_3_1(), "rule__PackageConstraint__NamespaceAssignment_3_1");
					put(grammarAccess.getPackageConstraintAccess().getTypesAssignment_5(), "rule__PackageConstraint__TypesAssignment_5");
					put(grammarAccess.getDataTypeConstraintAccess().getDataTypeAssignment_1(), "rule__DataTypeConstraint__DataTypeAssignment_1");
					put(grammarAccess.getDataTypeConstraintAccess().getConstraintAssignment_2(), "rule__DataTypeConstraint__ConstraintAssignment_2");
					put(grammarAccess.getDataTypeConstraintAccess().getDescriptionAssignment_3(), "rule__DataTypeConstraint__DescriptionAssignment_3");
					put(grammarAccess.getEntityConstraintAccess().getEntityAssignment_1(), "rule__EntityConstraint__EntityAssignment_1");
					put(grammarAccess.getEntityConstraintAccess().getDescriptionAssignment_2(), "rule__EntityConstraint__DescriptionAssignment_2");
					put(grammarAccess.getEntityConstraintAccess().getFeaturesAssignment_4(), "rule__EntityConstraint__FeaturesAssignment_4");
					put(grammarAccess.getFeatureConstraintAccess().getConstraintAssignment_1(), "rule__FeatureConstraint__ConstraintAssignment_1");
					put(grammarAccess.getFeatureConstraintAccess().getDescriptionAssignment_2(), "rule__FeatureConstraint__DescriptionAssignment_2");
					put(grammarAccess.getAttributeConstraintAccess().getAttributeAssignment(), "rule__AttributeConstraint__AttributeAssignment");
					put(grammarAccess.getBoolConstraintAccess().getConstraintAssignment(), "rule__BoolConstraint__ConstraintAssignment");
					put(grammarAccess.getStringConstraintAccess().getConstraintAssignment_0(), "rule__StringConstraint__ConstraintAssignment_0");
					put(grammarAccess.getStringConstraintAccess().getConstraintRefAssignment_1(), "rule__StringConstraint__ConstraintRefAssignment_1");
					put(grammarAccess.getStringConstraintAccess().getRegularExpressionAssignment_2_1(), "rule__StringConstraint__RegularExpressionAssignment_2_1");
					put(grammarAccess.getDateTimeConstraintAccess().getConstraintAssignment_0(), "rule__DateTimeConstraint__ConstraintAssignment_0");
					put(grammarAccess.getDateTimeConstraintAccess().getDataTypeAssignment_1(), "rule__DateTimeConstraint__DataTypeAssignment_1");
					put(grammarAccess.getDateTimeConstraintAccess().getHasDefaultAssignment_2_0(), "rule__DateTimeConstraint__HasDefaultAssignment_2_0");
					put(grammarAccess.getDateTimeConstraintAccess().getDefaultValueAssignment_2_1(), "rule__DateTimeConstraint__DefaultValueAssignment_2_1");
					put(grammarAccess.getDecimalConstraintAccess().getConstraintAssignment_0(), "rule__DecimalConstraint__ConstraintAssignment_0");
					put(grammarAccess.getDecimalConstraintAccess().getConstraintRefAssignment_1(), "rule__DecimalConstraint__ConstraintRefAssignment_1");
					put(grammarAccess.getEnumerationConstraintAccess().getUsageAssignment_1(), "rule__EnumerationConstraint__UsageAssignment_1");
					put(grammarAccess.getEnumerationConstraintAccess().getFixeLenAssignment_2_1(), "rule__EnumerationConstraint__FixeLenAssignment_2_1");
					put(grammarAccess.getEnumerationConstraintAccess().getHasDefaultAssignment_3_0(), "rule__EnumerationConstraint__HasDefaultAssignment_3_0");
					put(grammarAccess.getEnumerationConstraintAccess().getDefaultValueAsStringAssignment_3_1(), "rule__EnumerationConstraint__DefaultValueAsStringAssignment_3_1");
					put(grammarAccess.getNumberConstraintAccess().getHasDefaultAssignment_0_0(), "rule__NumberConstraint__HasDefaultAssignment_0_0");
					put(grammarAccess.getNumberConstraintAccess().getDefaultValueAssignment_0_1(), "rule__NumberConstraint__DefaultValueAssignment_0_1");
					put(grammarAccess.getNumberConstraintAccess().getIsFixedAssignment_1_0(), "rule__NumberConstraint__IsFixedAssignment_1_0");
					put(grammarAccess.getNumberConstraintAccess().getFixedValueAssignment_1_1(), "rule__NumberConstraint__FixedValueAssignment_1_1");
					put(grammarAccess.getNumberConstraintAccess().getMinValueAssignment_2_1(), "rule__NumberConstraint__MinValueAssignment_2_1");
					put(grammarAccess.getNumberConstraintAccess().getMaxValueAssignment_3_1(), "rule__NumberConstraint__MaxValueAssignment_3_1");
					put(grammarAccess.getNumberConstraintAccess().getMinLenAssignment_4_1(), "rule__NumberConstraint__MinLenAssignment_4_1");
					put(grammarAccess.getNumberConstraintAccess().getMaxLenAssignment_5_1(), "rule__NumberConstraint__MaxLenAssignment_5_1");
					put(grammarAccess.getNumberConstraintAccess().getFixeLenAssignment_6_1(), "rule__NumberConstraint__FixeLenAssignment_6_1");
					put(grammarAccess.getNumberConstraintAccess().getPaddleAssignment_7_1(), "rule__NumberConstraint__PaddleAssignment_7_1");
					put(grammarAccess.getNumberConstraintAccess().getIsIdAssignment_8(), "rule__NumberConstraint__IsIdAssignment_8");
					put(grammarAccess.getNumberConstraintAccess().getNullableAssignment_9(), "rule__NumberConstraint__NullableAssignment_9");
					put(grammarAccess.getNumberConstraintAccess().getDerivedAssignment_10_0(), "rule__NumberConstraint__DerivedAssignment_10_0");
					put(grammarAccess.getNumberConstraintAccess().getWritableAssignment_10_1(), "rule__NumberConstraint__WritableAssignment_10_1");
					put(grammarAccess.getNumberConstraintAccess().getIsXSDAttAssignment_11(), "rule__NumberConstraint__IsXSDAttAssignment_11");
					put(grammarAccess.getAllConstraintAccess().getHasDefaultAssignment_0_0(), "rule__AllConstraint__HasDefaultAssignment_0_0");
					put(grammarAccess.getAllConstraintAccess().getDefaultValueAssignment_0_1(), "rule__AllConstraint__DefaultValueAssignment_0_1");
					put(grammarAccess.getAllConstraintAccess().getIsFixedAssignment_1_0(), "rule__AllConstraint__IsFixedAssignment_1_0");
					put(grammarAccess.getAllConstraintAccess().getFixedValueAssignment_1_1(), "rule__AllConstraint__FixedValueAssignment_1_1");
					put(grammarAccess.getAllConstraintAccess().getMinLenAssignment_2_1(), "rule__AllConstraint__MinLenAssignment_2_1");
					put(grammarAccess.getAllConstraintAccess().getMaxLenAssignment_3_1(), "rule__AllConstraint__MaxLenAssignment_3_1");
					put(grammarAccess.getAllConstraintAccess().getFixeLenAssignment_4_1(), "rule__AllConstraint__FixeLenAssignment_4_1");
					put(grammarAccess.getAllConstraintAccess().getPaddleAssignment_5_1(), "rule__AllConstraint__PaddleAssignment_5_1");
					put(grammarAccess.getAllConstraintAccess().getIsIdAssignment_6(), "rule__AllConstraint__IsIdAssignment_6");
					put(grammarAccess.getAllConstraintAccess().getNullableAssignment_7(), "rule__AllConstraint__NullableAssignment_7");
					put(grammarAccess.getAllConstraintAccess().getDerivedAssignment_8_0(), "rule__AllConstraint__DerivedAssignment_8_0");
					put(grammarAccess.getAllConstraintAccess().getWritableAssignment_8_1(), "rule__AllConstraint__WritableAssignment_8_1");
					put(grammarAccess.getAllConstraintAccess().getIsXSDAttAssignment_9(), "rule__AllConstraint__IsXSDAttAssignment_9");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			fr.chaunier.xtext.constraint.ui.contentassist.antlr.internal.InternalCstDslParser typedParser = (fr.chaunier.xtext.constraint.ui.contentassist.antlr.internal.InternalCstDslParser) parser;
			typedParser.entryRuleDomainModelConstraint();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public CstDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(CstDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
