grammar fr.chaunier.xtext.instance.om.InstanceDsl with org.eclipse.xtext.common.Terminals

import  "platform:/resource/fr.chaunier.xtext.omcst.om/src-gen/fr/chaunier/xtext/omcst/om/OmcstDsl.ecore" as mm 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore 

generate instanceDsl "http://www.chaunier.fr/xtext/instance/om/InstanceDsl"

Factory :
	(imports+=Import)*
//	(annotations+=Annotation)*
	root=NewObject;

	
Import :
	'import' importedNamespace=QualifiedNameWithWildCard;

QualifiedNameWithWildCard:
	QualifiedName '.*'?;

QualifiedName:
	ID ('.' ID)*;

Feature:
	eFeature=[mm::StructuralFeature] (isMany?="+=" | "=") value=Value
;
	
NewObject:
	eClass=[mm::Entity] (name=ID)? "{"
		(features+=Feature)*
	"}";
	
Value:
	TerminalExpression | Reference | Containment
;

Reference:
	value = [ecore::EObject]
;
	
Containment:
	value = NewObject
;

//enum Type:
//	void | integer | real | boolean | string;
	
Attribute:
	(EnumAttribute | StringAttribute | IntegerAttribute  | BooleanAttribute | DateAttribute | NullAttribute)
;

EnumAttribute:
	 ":" value = [mm::EnumerationLiteral]
;

IntegerAttribute :
	value=BIGINT
;

StringAttribute :
	value=STRING
;

DateAttribute:
	 value=DATE
;

NullAttribute:
	value = "NULL"
;

BooleanAttribute:
	 value?="true" |  "false" {BooleanAttribute}
;	

terminal BIGINT returns ecore::EBigInteger:
	('0'..'9')*;

terminal NUMBER returns ecore::EBigDecimal:
	('0'..'9')* ('.' ('0'..'9')+)?;
	
terminal INT returns ecore::EInt:
	'this one has been deactivated';

terminal DATE returns ecore::EDate : ('0'..'1') '0'..'9' '.' '0'..'3' '0'..'9' '.'  '0'..'9' '0'..'9' '0'..'9' '0'..'9';

//terminal INT returns ecore::EInt : ('-')?  ('0'..'9')+;
//terminal LONG returns ecore::ELong : ('-')?  ('0'..'9')+;
//terminal DOUBLE returns ecore::EDouble : ('-')?  ('0'..'9')+ '.'  ('0'..'9')+;
//terminal DATE returns ecore::EDate : ('0'..'1') '0'..'9' '.' '0'..'3' '0'..'9' '.'  '0'..'9' '0'..'9' '0'..'9' '0'..'9';


TerminalExpression:
//   this = This |
//   variable = Variable |
//   new = New |
//   cast = Cast |
//   original = Original |
   int = Intero |
   string = Stringa |
   null = Nullo 
;

//This: variable='this';
//Variable: (parameter=[Parameter]) | (fieldRef = [FieldRef]);
//New: 'new' type=[mm::Entity] ; //'(' (args+=Argument (',' args+=Argument)*)? ')';
//Cast: ('(' '(' type=[Class] ')' expression=Expression) ')'; // | ('(''(' type=[Class] ')' expression=TerminalExpression ')');
//Original: {Original} 'original' '('(par+=[Parameter] (',' par+=[Parameter])*)? ')';
Intero: value = INT;
Stringa: value = STRING;
Nullo: value = 'null';
