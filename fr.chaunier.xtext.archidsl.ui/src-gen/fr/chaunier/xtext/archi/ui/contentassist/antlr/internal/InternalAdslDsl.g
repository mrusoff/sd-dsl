/*
* generated by Xtext
*/
grammar InternalAdslDsl;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package fr.chaunier.xtext.archi.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package fr.chaunier.xtext.archi.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import fr.chaunier.xtext.archi.services.AdslDslGrammarAccess;

}

@parser::members {
 
 	private AdslDslGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(AdslDslGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleArchiModel
entryRuleArchiModel 
:
{ before(grammarAccess.getArchiModelRule()); }
	 ruleArchiModel
{ after(grammarAccess.getArchiModelRule()); } 
	 EOF 
;

// Rule ArchiModel
ruleArchiModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArchiModelAccess().getGroup()); }
(rule__ArchiModel__Group__0)
{ after(grammarAccess.getArchiModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedNameWithWildCard
entryRuleQualifiedNameWithWildCard 
:
{ before(grammarAccess.getQualifiedNameWithWildCardRule()); }
	 ruleQualifiedNameWithWildCard
{ after(grammarAccess.getQualifiedNameWithWildCardRule()); } 
	 EOF 
;

// Rule QualifiedNameWithWildCard
ruleQualifiedNameWithWildCard
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameWithWildCardAccess().getGroup()); }
(rule__QualifiedNameWithWildCard__Group__0)
{ after(grammarAccess.getQualifiedNameWithWildCardAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSystem
entryRuleSystem 
:
{ before(grammarAccess.getSystemRule()); }
	 ruleSystem
{ after(grammarAccess.getSystemRule()); } 
	 EOF 
;

// Rule System
ruleSystem
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSystemAccess().getGroup()); }
(rule__System__Group__0)
{ after(grammarAccess.getSystemAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUsing
entryRuleUsing 
:
{ before(grammarAccess.getUsingRule()); }
	 ruleUsing
{ after(grammarAccess.getUsingRule()); } 
	 EOF 
;

// Rule Using
ruleUsing
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUsingAccess().getGroup()); }
(rule__Using__Group__0)
{ after(grammarAccess.getUsingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComponent
entryRuleComponent 
:
{ before(grammarAccess.getComponentRule()); }
	 ruleComponent
{ after(grammarAccess.getComponentRule()); } 
	 EOF 
;

// Rule Component
ruleComponent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getComponentAccess().getGroup()); }
(rule__Component__Group__0)
{ after(grammarAccess.getComponentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePort
entryRulePort 
:
{ before(grammarAccess.getPortRule()); }
	 rulePort
{ after(grammarAccess.getPortRule()); } 
	 EOF 
;

// Rule Port
rulePort
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPortAccess().getAlternatives()); }
(rule__Port__Alternatives)
{ after(grammarAccess.getPortAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProvidedPort
entryRuleProvidedPort 
:
{ before(grammarAccess.getProvidedPortRule()); }
	 ruleProvidedPort
{ after(grammarAccess.getProvidedPortRule()); } 
	 EOF 
;

// Rule ProvidedPort
ruleProvidedPort
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProvidedPortAccess().getGroup()); }
(rule__ProvidedPort__Group__0)
{ after(grammarAccess.getProvidedPortAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRequiredPort
entryRuleRequiredPort 
:
{ before(grammarAccess.getRequiredPortRule()); }
	 ruleRequiredPort
{ after(grammarAccess.getRequiredPortRule()); } 
	 EOF 
;

// Rule RequiredPort
ruleRequiredPort
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRequiredPortAccess().getGroup()); }
(rule__RequiredPort__Group__0)
{ after(grammarAccess.getRequiredPortAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInterface
entryRuleInterface 
:
{ before(grammarAccess.getInterfaceRule()); }
	 ruleInterface
{ after(grammarAccess.getInterfaceRule()); } 
	 EOF 
;

// Rule Interface
ruleInterface
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInterfaceAccess().getGroup()); }
(rule__Interface__Group__0)
{ after(grammarAccess.getInterfaceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMessageInteraction
entryRuleMessageInteraction 
:
{ before(grammarAccess.getMessageInteractionRule()); }
	 ruleMessageInteraction
{ after(grammarAccess.getMessageInteractionRule()); } 
	 EOF 
;

// Rule MessageInteraction
ruleMessageInteraction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMessageInteractionAccess().getAlternatives()); }
(rule__MessageInteraction__Alternatives)
{ after(grammarAccess.getMessageInteractionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOnewayInteraction
entryRuleOnewayInteraction 
:
{ before(grammarAccess.getOnewayInteractionRule()); }
	 ruleOnewayInteraction
{ after(grammarAccess.getOnewayInteractionRule()); } 
	 EOF 
;

// Rule OnewayInteraction
ruleOnewayInteraction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOnewayInteractionAccess().getGroup()); }
(rule__OnewayInteraction__Group__0)
{ after(grammarAccess.getOnewayInteractionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRequestReplyInteraction
entryRuleRequestReplyInteraction 
:
{ before(grammarAccess.getRequestReplyInteractionRule()); }
	 ruleRequestReplyInteraction
{ after(grammarAccess.getRequestReplyInteractionRule()); } 
	 EOF 
;

// Rule RequestReplyInteraction
ruleRequestReplyInteraction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRequestReplyInteractionAccess().getGroup()); }
(rule__RequestReplyInteraction__Group__0)
{ after(grammarAccess.getRequestReplyInteractionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMessage
entryRuleMessage 
:
{ before(grammarAccess.getMessageRule()); }
	 ruleMessage
{ after(grammarAccess.getMessageRule()); } 
	 EOF 
;

// Rule Message
ruleMessage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMessageAccess().getGroup()); }
(rule__Message__Group__0)
{ after(grammarAccess.getMessageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMessageParameter
entryRuleMessageParameter 
:
{ before(grammarAccess.getMessageParameterRule()); }
	 ruleMessageParameter
{ after(grammarAccess.getMessageParameterRule()); } 
	 EOF 
;

// Rule MessageParameter
ruleMessageParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMessageParameterAccess().getGroup()); }
(rule__MessageParameter__Group__0)
{ after(grammarAccess.getMessageParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__System__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemAccess().getSubSystemsAssignment_4_0()); }
(rule__System__SubSystemsAssignment_4_0)
{ after(grammarAccess.getSystemAccess().getSubSystemsAssignment_4_0()); }
)

    |(
{ before(grammarAccess.getSystemAccess().getComponentsAssignment_4_1()); }
(rule__System__ComponentsAssignment_4_1)
{ after(grammarAccess.getSystemAccess().getComponentsAssignment_4_1()); }
)

    |(
{ before(grammarAccess.getSystemAccess().getInterfacesAssignment_4_2()); }
(rule__System__InterfacesAssignment_4_2)
{ after(grammarAccess.getSystemAccess().getInterfacesAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPortAccess().getProvidedPortParserRuleCall_0()); }
	ruleProvidedPort
{ after(grammarAccess.getPortAccess().getProvidedPortParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPortAccess().getRequiredPortParserRuleCall_1()); }
	ruleRequiredPort
{ after(grammarAccess.getPortAccess().getRequiredPortParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MessageInteraction__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageInteractionAccess().getOnewayInteractionParserRuleCall_0()); }
	ruleOnewayInteraction
{ after(grammarAccess.getMessageInteractionAccess().getOnewayInteractionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getMessageInteractionAccess().getRequestReplyInteractionParserRuleCall_1()); }
	ruleRequestReplyInteraction
{ after(grammarAccess.getMessageInteractionAccess().getRequestReplyInteractionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__ArchiModel__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArchiModel__Group__0__Impl
	rule__ArchiModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArchiModel__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArchiModelAccess().getImportsAssignment_0()); }
(rule__ArchiModel__ImportsAssignment_0)*
{ after(grammarAccess.getArchiModelAccess().getImportsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArchiModel__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArchiModel__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArchiModel__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArchiModelAccess().getElementsAssignment_1()); }
(rule__ArchiModel__ElementsAssignment_1)*
{ after(grammarAccess.getArchiModelAccess().getElementsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
(rule__Import__ImportedNamespaceAssignment_1)
{ after(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedNameWithWildCard__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildCard__Group__0__Impl
	rule__QualifiedNameWithWildCard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildCard__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildCardAccess().getQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName
{ after(grammarAccess.getQualifiedNameWithWildCardAccess().getQualifiedNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildCard__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildCard__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildCard__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildCardAccess().getFullStopAsteriskKeyword_1()); }
(
	'.*' 
)?
{ after(grammarAccess.getQualifiedNameWithWildCardAccess().getFullStopAsteriskKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__System__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__System__Group__0__Impl
	rule__System__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemAccess().getSystemKeyword_0()); }

	'system' 

{ after(grammarAccess.getSystemAccess().getSystemKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__System__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__System__Group__1__Impl
	rule__System__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemAccess().getNameAssignment_1()); }
(rule__System__NameAssignment_1)
{ after(grammarAccess.getSystemAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__System__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__System__Group__2__Impl
	rule__System__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getSystemAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__System__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__System__Group__3__Impl
	rule__System__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemAccess().getUsingsAssignment_3()); }
(rule__System__UsingsAssignment_3)*
{ after(grammarAccess.getSystemAccess().getUsingsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__System__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__System__Group__4__Impl
	rule__System__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemAccess().getAlternatives_4()); }
(rule__System__Alternatives_4)*
{ after(grammarAccess.getSystemAccess().getAlternatives_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__System__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__System__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getSystemAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Using__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Using__Group__0__Impl
	rule__Using__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Using__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsingAccess().getUsingKeyword_0()); }

	'using' 

{ after(grammarAccess.getUsingAccess().getUsingKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Using__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Using__Group__1__Impl
	rule__Using__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Using__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsingAccess().getSystemAssignment_1()); }
(rule__Using__SystemAssignment_1)
{ after(grammarAccess.getUsingAccess().getSystemAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Using__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Using__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Using__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsingAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getUsingAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Component__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component__Group__0__Impl
	rule__Component__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getComponentKeyword_0()); }

	'component' 

{ after(grammarAccess.getComponentAccess().getComponentKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component__Group__1__Impl
	rule__Component__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getNameAssignment_1()); }
(rule__Component__NameAssignment_1)
{ after(grammarAccess.getComponentAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component__Group__2__Impl
	rule__Component__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getComponentAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component__Group__3__Impl
	rule__Component__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getPortsAssignment_3()); }
(rule__Component__PortsAssignment_3)*
{ after(grammarAccess.getComponentAccess().getPortsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getComponentAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ProvidedPort__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProvidedPort__Group__0__Impl
	rule__ProvidedPort__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProvidedPort__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedPortAccess().getProvidesKeyword_0()); }

	'provides' 

{ after(grammarAccess.getProvidedPortAccess().getProvidesKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProvidedPort__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProvidedPort__Group__1__Impl
	rule__ProvidedPort__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProvidedPort__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedPortAccess().getIsMandatoryAssignment_1()); }
(rule__ProvidedPort__IsMandatoryAssignment_1)?
{ after(grammarAccess.getProvidedPortAccess().getIsMandatoryAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProvidedPort__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProvidedPort__Group__2__Impl
	rule__ProvidedPort__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProvidedPort__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedPortAccess().getIsToManyAssignment_2()); }
(rule__ProvidedPort__IsToManyAssignment_2)?
{ after(grammarAccess.getProvidedPortAccess().getIsToManyAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProvidedPort__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProvidedPort__Group__3__Impl
	rule__ProvidedPort__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ProvidedPort__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedPortAccess().getNameAssignment_3()); }
(rule__ProvidedPort__NameAssignment_3)
{ after(grammarAccess.getProvidedPortAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProvidedPort__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProvidedPort__Group__4__Impl
	rule__ProvidedPort__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ProvidedPort__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedPortAccess().getColonKeyword_4()); }

	':' 

{ after(grammarAccess.getProvidedPortAccess().getColonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProvidedPort__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProvidedPort__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProvidedPort__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedPortAccess().getInterfaceAssignment_5()); }
(rule__ProvidedPort__InterfaceAssignment_5)
{ after(grammarAccess.getProvidedPortAccess().getInterfaceAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__RequiredPort__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequiredPort__Group__0__Impl
	rule__RequiredPort__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredPort__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredPortAccess().getRequiresKeyword_0()); }

	'requires' 

{ after(grammarAccess.getRequiredPortAccess().getRequiresKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RequiredPort__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequiredPort__Group__1__Impl
	rule__RequiredPort__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredPort__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredPortAccess().getIsMandatoryAssignment_1()); }
(rule__RequiredPort__IsMandatoryAssignment_1)?
{ after(grammarAccess.getRequiredPortAccess().getIsMandatoryAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RequiredPort__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequiredPort__Group__2__Impl
	rule__RequiredPort__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredPort__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredPortAccess().getIsToManyAssignment_2()); }
(rule__RequiredPort__IsToManyAssignment_2)?
{ after(grammarAccess.getRequiredPortAccess().getIsToManyAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RequiredPort__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequiredPort__Group__3__Impl
	rule__RequiredPort__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredPort__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredPortAccess().getNameAssignment_3()); }
(rule__RequiredPort__NameAssignment_3)
{ after(grammarAccess.getRequiredPortAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RequiredPort__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequiredPort__Group__4__Impl
	rule__RequiredPort__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredPort__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredPortAccess().getColonKeyword_4()); }

	':' 

{ after(grammarAccess.getRequiredPortAccess().getColonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RequiredPort__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequiredPort__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredPort__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredPortAccess().getInterfaceAssignment_5()); }
(rule__RequiredPort__InterfaceAssignment_5)
{ after(grammarAccess.getRequiredPortAccess().getInterfaceAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Interface__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group__0__Impl
	rule__Interface__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getInterfaceKeyword_0()); }

	'interface' 

{ after(grammarAccess.getInterfaceAccess().getInterfaceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group__1__Impl
	rule__Interface__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getNameAssignment_1()); }
(rule__Interface__NameAssignment_1)
{ after(grammarAccess.getInterfaceAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group__2__Impl
	rule__Interface__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getInterfaceAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group__3__Impl
	rule__Interface__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getInteractionsAssignment_3()); }
(rule__Interface__InteractionsAssignment_3)*
{ after(grammarAccess.getInterfaceAccess().getInteractionsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getInterfaceAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__OnewayInteraction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OnewayInteraction__Group__0__Impl
	rule__OnewayInteraction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OnewayInteraction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOnewayInteractionAccess().getOnewayKeyword_0()); }

	'oneway' 

{ after(grammarAccess.getOnewayInteractionAccess().getOnewayKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OnewayInteraction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OnewayInteraction__Group__1__Impl
	rule__OnewayInteraction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OnewayInteraction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOnewayInteractionAccess().getNameAssignment_1()); }
(rule__OnewayInteraction__NameAssignment_1)
{ after(grammarAccess.getOnewayInteractionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OnewayInteraction__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OnewayInteraction__Group__2__Impl
	rule__OnewayInteraction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OnewayInteraction__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOnewayInteractionAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getOnewayInteractionAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OnewayInteraction__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OnewayInteraction__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OnewayInteraction__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOnewayInteractionAccess().getMessageAssignment_3()); }
(rule__OnewayInteraction__MessageAssignment_3)
{ after(grammarAccess.getOnewayInteractionAccess().getMessageAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__RequestReplyInteraction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequestReplyInteraction__Group__0__Impl
	rule__RequestReplyInteraction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestReplyInteraction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequestReplyInteractionAccess().getRrKeyword_0()); }

	'rr' 

{ after(grammarAccess.getRequestReplyInteractionAccess().getRrKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RequestReplyInteraction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequestReplyInteraction__Group__1__Impl
	rule__RequestReplyInteraction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestReplyInteraction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequestReplyInteractionAccess().getNameAssignment_1()); }
(rule__RequestReplyInteraction__NameAssignment_1)
{ after(grammarAccess.getRequestReplyInteractionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RequestReplyInteraction__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequestReplyInteraction__Group__2__Impl
	rule__RequestReplyInteraction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestReplyInteraction__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequestReplyInteractionAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getRequestReplyInteractionAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RequestReplyInteraction__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequestReplyInteraction__Group__3__Impl
	rule__RequestReplyInteraction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestReplyInteraction__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequestReplyInteractionAccess().getRequestKeyword_3()); }

	'request' 

{ after(grammarAccess.getRequestReplyInteractionAccess().getRequestKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RequestReplyInteraction__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequestReplyInteraction__Group__4__Impl
	rule__RequestReplyInteraction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestReplyInteraction__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequestReplyInteractionAccess().getEqualsSignKeyword_4()); }

	'=' 

{ after(grammarAccess.getRequestReplyInteractionAccess().getEqualsSignKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RequestReplyInteraction__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequestReplyInteraction__Group__5__Impl
	rule__RequestReplyInteraction__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestReplyInteraction__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequestReplyInteractionAccess().getRequestAssignment_5()); }
(rule__RequestReplyInteraction__RequestAssignment_5)
{ after(grammarAccess.getRequestReplyInteractionAccess().getRequestAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RequestReplyInteraction__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequestReplyInteraction__Group__6__Impl
	rule__RequestReplyInteraction__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestReplyInteraction__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequestReplyInteractionAccess().getReplyKeyword_6()); }

	'reply' 

{ after(grammarAccess.getRequestReplyInteractionAccess().getReplyKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RequestReplyInteraction__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequestReplyInteraction__Group__7__Impl
	rule__RequestReplyInteraction__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestReplyInteraction__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequestReplyInteractionAccess().getEqualsSignKeyword_7()); }

	'=' 

{ after(grammarAccess.getRequestReplyInteractionAccess().getEqualsSignKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RequestReplyInteraction__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequestReplyInteraction__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RequestReplyInteraction__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequestReplyInteractionAccess().getReplyAssignment_8()); }
(rule__RequestReplyInteraction__ReplyAssignment_8)
{ after(grammarAccess.getRequestReplyInteractionAccess().getReplyAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__Message__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Message__Group__0__Impl
	rule__Message__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getMessageAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Message__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Message__Group__1__Impl
	rule__Message__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageAccess().getGroup_1()); }
(rule__Message__Group_1__0)*
{ after(grammarAccess.getMessageAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Message__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Message__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getMessageAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Message__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Message__Group_1__0__Impl
	rule__Message__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageAccess().getParametersAssignment_1_0()); }
(rule__Message__ParametersAssignment_1_0)
{ after(grammarAccess.getMessageAccess().getParametersAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Message__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Message__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageAccess().getCommaKeyword_1_1()); }
(
	',' 
)?
{ after(grammarAccess.getMessageAccess().getCommaKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MessageParameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageParameter__Group__0__Impl
	rule__MessageParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageParameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageParameterAccess().getNameAssignment_0()); }
(rule__MessageParameter__NameAssignment_0)
{ after(grammarAccess.getMessageParameterAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MessageParameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageParameter__Group__1__Impl
	rule__MessageParameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageParameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageParameterAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getMessageParameterAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MessageParameter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageParameter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageParameter__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageParameterAccess().getTyperefAssignment_2()); }
(rule__MessageParameter__TyperefAssignment_2)
{ after(grammarAccess.getMessageParameterAccess().getTyperefAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__ArchiModel__ImportsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArchiModelAccess().getImportsImportParserRuleCall_0_0()); }
	ruleImport{ after(grammarAccess.getArchiModelAccess().getImportsImportParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArchiModel__ElementsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArchiModelAccess().getElementsSystemParserRuleCall_1_0()); }
	ruleSystem{ after(grammarAccess.getArchiModelAccess().getElementsSystemParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportedNamespaceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildCardParserRuleCall_1_0()); }
	ruleQualifiedNameWithWildCard{ after(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildCardParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__System__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getSystemAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__System__UsingsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemAccess().getUsingsUsingParserRuleCall_3_0()); }
	ruleUsing{ after(grammarAccess.getSystemAccess().getUsingsUsingParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__System__SubSystemsAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemAccess().getSubSystemsSystemParserRuleCall_4_0_0()); }
	ruleSystem{ after(grammarAccess.getSystemAccess().getSubSystemsSystemParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__System__ComponentsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemAccess().getComponentsComponentParserRuleCall_4_1_0()); }
	ruleComponent{ after(grammarAccess.getSystemAccess().getComponentsComponentParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__System__InterfacesAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSystemAccess().getInterfacesInterfaceParserRuleCall_4_2_0()); }
	ruleInterface{ after(grammarAccess.getSystemAccess().getInterfacesInterfaceParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Using__SystemAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsingAccess().getSystemSystemCrossReference_1_0()); }
(
{ before(grammarAccess.getUsingAccess().getSystemSystemIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getUsingAccess().getSystemSystemIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getUsingAccess().getSystemSystemCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Component__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getComponentAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Component__PortsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getPortsPortParserRuleCall_3_0()); }
	rulePort{ after(grammarAccess.getComponentAccess().getPortsPortParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProvidedPort__IsMandatoryAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedPortAccess().getIsMandatoryMandatoryKeyword_1_0()); }
(
{ before(grammarAccess.getProvidedPortAccess().getIsMandatoryMandatoryKeyword_1_0()); }

	'mandatory' 

{ after(grammarAccess.getProvidedPortAccess().getIsMandatoryMandatoryKeyword_1_0()); }
)

{ after(grammarAccess.getProvidedPortAccess().getIsMandatoryMandatoryKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProvidedPort__IsToManyAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedPortAccess().getIsToManyToManyKeyword_2_0()); }
(
{ before(grammarAccess.getProvidedPortAccess().getIsToManyToManyKeyword_2_0()); }

	'toMany' 

{ after(grammarAccess.getProvidedPortAccess().getIsToManyToManyKeyword_2_0()); }
)

{ after(grammarAccess.getProvidedPortAccess().getIsToManyToManyKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProvidedPort__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedPortAccess().getNameIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getProvidedPortAccess().getNameIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProvidedPort__InterfaceAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProvidedPortAccess().getInterfaceInterfaceCrossReference_5_0()); }
(
{ before(grammarAccess.getProvidedPortAccess().getInterfaceInterfaceIDTerminalRuleCall_5_0_1()); }
	RULE_ID{ after(grammarAccess.getProvidedPortAccess().getInterfaceInterfaceIDTerminalRuleCall_5_0_1()); }
)
{ after(grammarAccess.getProvidedPortAccess().getInterfaceInterfaceCrossReference_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredPort__IsMandatoryAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredPortAccess().getIsMandatoryMandatoryKeyword_1_0()); }
(
{ before(grammarAccess.getRequiredPortAccess().getIsMandatoryMandatoryKeyword_1_0()); }

	'mandatory' 

{ after(grammarAccess.getRequiredPortAccess().getIsMandatoryMandatoryKeyword_1_0()); }
)

{ after(grammarAccess.getRequiredPortAccess().getIsMandatoryMandatoryKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredPort__IsToManyAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredPortAccess().getIsToManyToManyKeyword_2_0()); }
(
{ before(grammarAccess.getRequiredPortAccess().getIsToManyToManyKeyword_2_0()); }

	'toMany' 

{ after(grammarAccess.getRequiredPortAccess().getIsToManyToManyKeyword_2_0()); }
)

{ after(grammarAccess.getRequiredPortAccess().getIsToManyToManyKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredPort__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredPortAccess().getNameIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getRequiredPortAccess().getNameIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RequiredPort__InterfaceAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequiredPortAccess().getInterfaceInterfaceCrossReference_5_0()); }
(
{ before(grammarAccess.getRequiredPortAccess().getInterfaceInterfaceIDTerminalRuleCall_5_0_1()); }
	RULE_ID{ after(grammarAccess.getRequiredPortAccess().getInterfaceInterfaceIDTerminalRuleCall_5_0_1()); }
)
{ after(grammarAccess.getRequiredPortAccess().getInterfaceInterfaceCrossReference_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getInterfaceAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__InteractionsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getInteractionsMessageInteractionParserRuleCall_3_0()); }
	ruleMessageInteraction{ after(grammarAccess.getInterfaceAccess().getInteractionsMessageInteractionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OnewayInteraction__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOnewayInteractionAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getOnewayInteractionAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OnewayInteraction__MessageAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOnewayInteractionAccess().getMessageMessageParserRuleCall_3_0()); }
	ruleMessage{ after(grammarAccess.getOnewayInteractionAccess().getMessageMessageParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RequestReplyInteraction__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequestReplyInteractionAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getRequestReplyInteractionAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RequestReplyInteraction__RequestAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequestReplyInteractionAccess().getRequestMessageParserRuleCall_5_0()); }
	ruleMessage{ after(grammarAccess.getRequestReplyInteractionAccess().getRequestMessageParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RequestReplyInteraction__ReplyAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequestReplyInteractionAccess().getReplyMessageParserRuleCall_8_0()); }
	ruleMessage{ after(grammarAccess.getRequestReplyInteractionAccess().getReplyMessageParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Message__ParametersAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageAccess().getParametersMessageParameterParserRuleCall_1_0_0()); }
	ruleMessageParameter{ after(grammarAccess.getMessageAccess().getParametersMessageParameterParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MessageParameter__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageParameterAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getMessageParameterAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MessageParameter__TyperefAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageParameterAccess().getTyperefEntityCrossReference_2_0()); }
(
{ before(grammarAccess.getMessageParameterAccess().getTyperefEntityQualifiedNameParserRuleCall_2_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getMessageParameterAccess().getTyperefEntityQualifiedNameParserRuleCall_2_0_1()); }
)
{ after(grammarAccess.getMessageParameterAccess().getTyperefEntityCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


