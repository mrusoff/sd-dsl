/*
* generated by Xtext
*/
package fr.chaunier.xtext.mapping.ui.labeling;

import static org.eclipse.xtext.util.Strings.notNull;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider;
import org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider;

import com.google.inject.Inject;

import fr.chaunier.xtext.mapping.mapDsl.FeaturePath;
import fr.chaunier.xtext.mapping.mapDsl.FeatureSet;


/**
 * Provides labels for a EObjects.
 * 
 * see http://www.eclipse.org/Xtext/documentation/latest/xtext.html#labelProvider
 */
public class MapDslLabelProvider extends DefaultEObjectLabelProvider {

	@Inject
	public MapDslLabelProvider(AdapterFactoryLabelProvider delegate) {
		super(delegate);
	}

	@Override
	protected Object doGetImage(Object element) {
		if (element instanceof EObject) {
			return ((EObject) element).eClass().getName() + ".gif";
		}
		return super.doGetImage(element);
	}

	public String text(FeaturePath fp) {
		StringBuilder builder = new StringBuilder();
//		builder.append(notNull(fp.getFrom().getPath().getAttribute()+' '+fp.getTo()));
		return builder.toString();
	}

	public String text(FeatureSet entity) {
		StringBuilder builder = new StringBuilder();
//		builder.append(notNull(entity.getName()));
//		builder.append(" : ");
//		builder.append(datatype.getType().getReferenced().getName());
		return builder.toString();
	}

}
