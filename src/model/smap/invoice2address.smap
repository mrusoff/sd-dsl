model invoice 

module invoiceDTD2Adress "map de la partie adresse" {

	map	invoice_dtd.Address.street1 => address.Address.line1 
	map	invoice_dtd.Address.street2 => address.Address.line2,address.Address.line3 rule "split"
	map	invoice_dtd.Address.zip => address.Address.postalCode
	map invoice_dtd.Address.city => address.Address.city
	
	ignore left invoice_dtd.Address.province,invoice_dtd.Address.state  
	set right address.Address.line4 = "pas d'info de livraison"
}

// set the old style in xsd date style
module invoiceDTD2Date  "map date" {

	map invoice_dtd.Date.day,invoice_dtd.Date.month,invoice_dtd.Date.year => invoice_xsd.Header.date rule "aggregate"
}

module inoiceDTD2InvoiceXSDBillTo {
	map invoice_dtd.BillTo.name => address.Person.firstName "documentation map du nom" 
	map invoice_dtd.BillTo.customerNumber => invoice_xsd.BillTo.customerNumber
	ignore left invoice_dtd.BillTo.maried
	map invoice_dtd.BillTo.phone => address.PostalAddress.phone
	map invoice_dtd.Invoice.items => invoice_xsd.Invoice.items 	rule "multiple"
} 

module inoiceDTD2InvoiceXSDItem {
	map invoice_dtd.Item.description => invoice_xsd.Item.description rule "multiple"
	map invoice_dtd.Item.discount => invoice_xsd.Item.discount
	map invoice_dtd.Item.discount => invoice_xsd.Item.price
}

module invoiceDTD2InovoiceXSD {
	call module invoiceDTD2Adress
	call module invoiceDTD2Date
	call module inoiceDTD2InvoiceXSDItem
}

root invoiceDTD2InovoiceXSD

