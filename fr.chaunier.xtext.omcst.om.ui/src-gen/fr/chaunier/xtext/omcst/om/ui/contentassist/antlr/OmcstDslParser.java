/*
* generated by Xtext
*/
package fr.chaunier.xtext.omcst.om.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import fr.chaunier.xtext.omcst.om.services.OmcstDslGrammarAccess;

public class OmcstDslParser extends AbstractContentAssistParser {
	
	@Inject
	private OmcstDslGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected fr.chaunier.xtext.omcst.om.ui.contentassist.antlr.internal.InternalOmcstDslParser createParser() {
		fr.chaunier.xtext.omcst.om.ui.contentassist.antlr.internal.InternalOmcstDslParser result = new fr.chaunier.xtext.omcst.om.ui.contentassist.antlr.internal.InternalOmcstDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getAbstractElementAccess().getAlternatives(), "rule__AbstractElement__Alternatives");
					put(grammarAccess.getTypeAccess().getAlternatives(), "rule__Type__Alternatives");
					put(grammarAccess.getStructuralFeatureAccess().getAlternatives(), "rule__StructuralFeature__Alternatives");
					put(grammarAccess.getTypedElementAccess().getAlternatives(), "rule__TypedElement__Alternatives");
					put(grammarAccess.getConstraintAccess().getAlternatives(), "rule__Constraint__Alternatives");
					put(grammarAccess.getVisibilityAccess().getAlternatives(), "rule__Visibility__Alternatives");
					put(grammarAccess.getEnumUsageAccess().getAlternatives(), "rule__EnumUsage__Alternatives");
					put(grammarAccess.getImportAccess().getGroup(), "rule__Import__Group__0");
					put(grammarAccess.getXsdElementAccess().getGroup(), "rule__XsdElement__Group__0");
					put(grammarAccess.getPackageDeclarationAccess().getGroup(), "rule__PackageDeclaration__Group__0");
					put(grammarAccess.getPackageDeclarationAccess().getGroup_2(), "rule__PackageDeclaration__Group_2__0");
					put(grammarAccess.getPackageDeclarationAccess().getGroup_3(), "rule__PackageDeclaration__Group_3__0");
					put(grammarAccess.getPackageDeclarationAccess().getGroup_4(), "rule__PackageDeclaration__Group_4__0");
					put(grammarAccess.getDataTypeAccess().getGroup(), "rule__DataType__Group__0");
					put(grammarAccess.getDataTypeAccess().getGroup_3(), "rule__DataType__Group_3__0");
					put(grammarAccess.getEntityAccess().getGroup(), "rule__Entity__Group__0");
					put(grammarAccess.getEntityAccess().getGroup_3(), "rule__Entity__Group_3__0");
					put(grammarAccess.getEntityAccess().getGroup_4(), "rule__Entity__Group_4__0");
					put(grammarAccess.getFeatureAccess().getGroup(), "rule__Feature__Group__0");
					put(grammarAccess.getFeatureAccess().getGroup_2(), "rule__Feature__Group_2__0");
					put(grammarAccess.getAttributeAccess().getGroup(), "rule__Attribute__Group__0");
					put(grammarAccess.getReferenceAccess().getGroup(), "rule__Reference__Group__0");
					put(grammarAccess.getReferenceAccess().getGroup_4(), "rule__Reference__Group_4__0");
					put(grammarAccess.getEnumerationAccess().getGroup(), "rule__Enumeration__Group__0");
					put(grammarAccess.getEnumerationLiteralAccess().getGroup(), "rule__EnumerationLiteral__Group__0");
					put(grammarAccess.getEnumerationLiteralAccess().getGroup_1(), "rule__EnumerationLiteral__Group_1__0");
					put(grammarAccess.getOperationAccess().getGroup(), "rule__Operation__Group__0");
					put(grammarAccess.getOperationAccess().getGroup_4(), "rule__Operation__Group_4__0");
					put(grammarAccess.getOperationAccess().getGroup_4_1(), "rule__Operation__Group_4_1__0");
					put(grammarAccess.getParameterAccess().getGroup(), "rule__Parameter__Group__0");
					put(grammarAccess.getTypeRefAccess().getGroup(), "rule__TypeRef__Group__0");
					put(grammarAccess.getQualifiedNameWithWildCardAccess().getGroup(), "rule__QualifiedNameWithWildCard__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
					put(grammarAccess.getAnnotationsAccess().getGroup(), "rule__Annotations__Group__0");
					put(grammarAccess.getAnnotationsAccess().getGroup_2(), "rule__Annotations__Group_2__0");
					put(grammarAccess.getAnnotationAccess().getGroup(), "rule__Annotation__Group__0");
					put(grammarAccess.getStringConstraintAccess().getGroup(), "rule__StringConstraint__Group__0");
					put(grammarAccess.getStringConstraintAccess().getGroup_2(), "rule__StringConstraint__Group_2__0");
					put(grammarAccess.getDateTimeConstraintAccess().getGroup(), "rule__DateTimeConstraint__Group__0");
					put(grammarAccess.getDateTimeConstraintAccess().getGroup_1(), "rule__DateTimeConstraint__Group_1__0");
					put(grammarAccess.getDecimalConstraintAccess().getGroup(), "rule__DecimalConstraint__Group__0");
					put(grammarAccess.getEnumerationConstraintAccess().getGroup(), "rule__EnumerationConstraint__Group__0");
					put(grammarAccess.getEnumerationConstraintAccess().getGroup_2(), "rule__EnumerationConstraint__Group_2__0");
					put(grammarAccess.getEnumerationConstraintAccess().getGroup_3(), "rule__EnumerationConstraint__Group_3__0");
					put(grammarAccess.getNumberConstraintAccess().getGroup(), "rule__NumberConstraint__Group__0");
					put(grammarAccess.getNumberConstraintAccess().getGroup_0(), "rule__NumberConstraint__Group_0__0");
					put(grammarAccess.getNumberConstraintAccess().getGroup_1(), "rule__NumberConstraint__Group_1__0");
					put(grammarAccess.getNumberConstraintAccess().getGroup_2(), "rule__NumberConstraint__Group_2__0");
					put(grammarAccess.getNumberConstraintAccess().getGroup_3(), "rule__NumberConstraint__Group_3__0");
					put(grammarAccess.getNumberConstraintAccess().getGroup_4(), "rule__NumberConstraint__Group_4__0");
					put(grammarAccess.getNumberConstraintAccess().getGroup_5(), "rule__NumberConstraint__Group_5__0");
					put(grammarAccess.getNumberConstraintAccess().getGroup_6(), "rule__NumberConstraint__Group_6__0");
					put(grammarAccess.getNumberConstraintAccess().getGroup_7(), "rule__NumberConstraint__Group_7__0");
					put(grammarAccess.getNumberConstraintAccess().getGroup_10(), "rule__NumberConstraint__Group_10__0");
					put(grammarAccess.getAllConstraintAccess().getGroup(), "rule__AllConstraint__Group__0");
					put(grammarAccess.getAllConstraintAccess().getGroup_0(), "rule__AllConstraint__Group_0__0");
					put(grammarAccess.getAllConstraintAccess().getGroup_1(), "rule__AllConstraint__Group_1__0");
					put(grammarAccess.getAllConstraintAccess().getGroup_2(), "rule__AllConstraint__Group_2__0");
					put(grammarAccess.getAllConstraintAccess().getGroup_3(), "rule__AllConstraint__Group_3__0");
					put(grammarAccess.getAllConstraintAccess().getGroup_4(), "rule__AllConstraint__Group_4__0");
					put(grammarAccess.getAllConstraintAccess().getGroup_5(), "rule__AllConstraint__Group_5__0");
					put(grammarAccess.getAllConstraintAccess().getGroup_8(), "rule__AllConstraint__Group_8__0");
					put(grammarAccess.getDomainModelAccess().getElementsAssignment(), "rule__DomainModel__ElementsAssignment");
					put(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1(), "rule__Import__ImportedNamespaceAssignment_1");
					put(grammarAccess.getXsdElementAccess().getXsdElementAssignment_1(), "rule__XsdElement__XsdElementAssignment_1");
					put(grammarAccess.getPackageDeclarationAccess().getNameAssignment_1(), "rule__PackageDeclaration__NameAssignment_1");
					put(grammarAccess.getPackageDeclarationAccess().getPrefixAssignment_2_1(), "rule__PackageDeclaration__PrefixAssignment_2_1");
					put(grammarAccess.getPackageDeclarationAccess().getNamespaceAssignment_3_1(), "rule__PackageDeclaration__NamespaceAssignment_3_1");
					put(grammarAccess.getPackageDeclarationAccess().getAnnoAssignment_4_1(), "rule__PackageDeclaration__AnnoAssignment_4_1");
					put(grammarAccess.getPackageDeclarationAccess().getElementsAssignment_6(), "rule__PackageDeclaration__ElementsAssignment_6");
					put(grammarAccess.getDataTypeAccess().getNameAssignment_1(), "rule__DataType__NameAssignment_1");
					put(grammarAccess.getDataTypeAccess().getConstraintAssignment_2(), "rule__DataType__ConstraintAssignment_2");
					put(grammarAccess.getDataTypeAccess().getAnnoAssignment_3_1(), "rule__DataType__AnnoAssignment_3_1");
					put(grammarAccess.getEntityAccess().getEntityTypeAssignment_0(), "rule__Entity__EntityTypeAssignment_0");
					put(grammarAccess.getEntityAccess().getNameAssignment_2(), "rule__Entity__NameAssignment_2");
					put(grammarAccess.getEntityAccess().getSuperTypeAssignment_3_1(), "rule__Entity__SuperTypeAssignment_3_1");
					put(grammarAccess.getEntityAccess().getAnnoAssignment_4_1(), "rule__Entity__AnnoAssignment_4_1");
					put(grammarAccess.getEntityAccess().getDescriptionAssignment_5(), "rule__Entity__DescriptionAssignment_5");
					put(grammarAccess.getEntityAccess().getFeaturesAssignment_7(), "rule__Entity__FeaturesAssignment_7");
					put(grammarAccess.getFeatureAccess().getConstraintAssignment_1(), "rule__Feature__ConstraintAssignment_1");
					put(grammarAccess.getFeatureAccess().getAnnoAssignment_2_1(), "rule__Feature__AnnoAssignment_2_1");
					put(grammarAccess.getFeatureAccess().getDescriptionAssignment_3(), "rule__Feature__DescriptionAssignment_3");
					put(grammarAccess.getAttributeAccess().getNameAssignment_0(), "rule__Attribute__NameAssignment_0");
					put(grammarAccess.getAttributeAccess().getTypeAssignment_2(), "rule__Attribute__TypeAssignment_2");
					put(grammarAccess.getReferenceAccess().getNameAssignment_1(), "rule__Reference__NameAssignment_1");
					put(grammarAccess.getReferenceAccess().getTypeAssignment_3(), "rule__Reference__TypeAssignment_3");
					put(grammarAccess.getReferenceAccess().getOppositeAssignment_4_1(), "rule__Reference__OppositeAssignment_4_1");
					put(grammarAccess.getEnumerationAccess().getNameAssignment_1(), "rule__Enumeration__NameAssignment_1");
					put(grammarAccess.getEnumerationAccess().getEnumerationLiteralsAssignment_3(), "rule__Enumeration__EnumerationLiteralsAssignment_3");
					put(grammarAccess.getEnumerationLiteralAccess().getNameAssignment_0(), "rule__EnumerationLiteral__NameAssignment_0");
					put(grammarAccess.getEnumerationLiteralAccess().getPersistedValueAssignment_1_1(), "rule__EnumerationLiteral__PersistedValueAssignment_1_1");
					put(grammarAccess.getOperationAccess().getVisibilityAssignment_0(), "rule__Operation__VisibilityAssignment_0");
					put(grammarAccess.getOperationAccess().getNameAssignment_2(), "rule__Operation__NameAssignment_2");
					put(grammarAccess.getOperationAccess().getParamsAssignment_4_0(), "rule__Operation__ParamsAssignment_4_0");
					put(grammarAccess.getOperationAccess().getParamsAssignment_4_1_1(), "rule__Operation__ParamsAssignment_4_1_1");
					put(grammarAccess.getOperationAccess().getTypeAssignment_7(), "rule__Operation__TypeAssignment_7");
					put(grammarAccess.getParameterAccess().getNameAssignment_0(), "rule__Parameter__NameAssignment_0");
					put(grammarAccess.getParameterAccess().getTypeAssignment_1(), "rule__Parameter__TypeAssignment_1");
					put(grammarAccess.getTypeRefAccess().getReferencedAssignment_0(), "rule__TypeRef__ReferencedAssignment_0");
					put(grammarAccess.getTypeRefAccess().getMultiAssignment_1(), "rule__TypeRef__MultiAssignment_1");
					put(grammarAccess.getTypeRefAccess().getOptionAssignment_2(), "rule__TypeRef__OptionAssignment_2");
					put(grammarAccess.getAnnotationsAccess().getAnnotationsAssignment_1(), "rule__Annotations__AnnotationsAssignment_1");
					put(grammarAccess.getAnnotationsAccess().getAnnotationsAssignment_2_1(), "rule__Annotations__AnnotationsAssignment_2_1");
					put(grammarAccess.getAnnotationAccess().getKeyAssignment_0(), "rule__Annotation__KeyAssignment_0");
					put(grammarAccess.getAnnotationAccess().getValueAssignment_2(), "rule__Annotation__ValueAssignment_2");
					put(grammarAccess.getBoolConstraintAccess().getConstraintAssignment(), "rule__BoolConstraint__ConstraintAssignment");
					put(grammarAccess.getStringConstraintAccess().getConstraintAssignment_0(), "rule__StringConstraint__ConstraintAssignment_0");
					put(grammarAccess.getStringConstraintAccess().getConstraintRefAssignment_1(), "rule__StringConstraint__ConstraintRefAssignment_1");
					put(grammarAccess.getStringConstraintAccess().getRegularExpressionAssignment_2_1(), "rule__StringConstraint__RegularExpressionAssignment_2_1");
					put(grammarAccess.getDateTimeConstraintAccess().getConstraintAssignment_0(), "rule__DateTimeConstraint__ConstraintAssignment_0");
					put(grammarAccess.getDateTimeConstraintAccess().getHasDefaultAssignment_1_0(), "rule__DateTimeConstraint__HasDefaultAssignment_1_0");
					put(grammarAccess.getDateTimeConstraintAccess().getDefaultValueAssignment_1_1(), "rule__DateTimeConstraint__DefaultValueAssignment_1_1");
					put(grammarAccess.getDecimalConstraintAccess().getConstraintAssignment_0(), "rule__DecimalConstraint__ConstraintAssignment_0");
					put(grammarAccess.getDecimalConstraintAccess().getConstraintRefAssignment_1(), "rule__DecimalConstraint__ConstraintRefAssignment_1");
					put(grammarAccess.getEnumerationConstraintAccess().getUsageAssignment_1(), "rule__EnumerationConstraint__UsageAssignment_1");
					put(grammarAccess.getEnumerationConstraintAccess().getFixeLenAssignment_2_1(), "rule__EnumerationConstraint__FixeLenAssignment_2_1");
					put(grammarAccess.getEnumerationConstraintAccess().getHasDefaultAssignment_3_0(), "rule__EnumerationConstraint__HasDefaultAssignment_3_0");
					put(grammarAccess.getEnumerationConstraintAccess().getDefaultValueAsStringAssignment_3_1(), "rule__EnumerationConstraint__DefaultValueAsStringAssignment_3_1");
					put(grammarAccess.getNumberConstraintAccess().getHasDefaultAssignment_0_0(), "rule__NumberConstraint__HasDefaultAssignment_0_0");
					put(grammarAccess.getNumberConstraintAccess().getDefaultValueAssignment_0_1(), "rule__NumberConstraint__DefaultValueAssignment_0_1");
					put(grammarAccess.getNumberConstraintAccess().getIsFixedAssignment_1_0(), "rule__NumberConstraint__IsFixedAssignment_1_0");
					put(grammarAccess.getNumberConstraintAccess().getFixedValueAssignment_1_1(), "rule__NumberConstraint__FixedValueAssignment_1_1");
					put(grammarAccess.getNumberConstraintAccess().getMinValueAssignment_2_1(), "rule__NumberConstraint__MinValueAssignment_2_1");
					put(grammarAccess.getNumberConstraintAccess().getMaxValueAssignment_3_1(), "rule__NumberConstraint__MaxValueAssignment_3_1");
					put(grammarAccess.getNumberConstraintAccess().getMinLenAssignment_4_1(), "rule__NumberConstraint__MinLenAssignment_4_1");
					put(grammarAccess.getNumberConstraintAccess().getMaxLenAssignment_5_1(), "rule__NumberConstraint__MaxLenAssignment_5_1");
					put(grammarAccess.getNumberConstraintAccess().getFixeLenAssignment_6_1(), "rule__NumberConstraint__FixeLenAssignment_6_1");
					put(grammarAccess.getNumberConstraintAccess().getPaddleAssignment_7_1(), "rule__NumberConstraint__PaddleAssignment_7_1");
					put(grammarAccess.getNumberConstraintAccess().getIsIdAssignment_8(), "rule__NumberConstraint__IsIdAssignment_8");
					put(grammarAccess.getNumberConstraintAccess().getNullableAssignment_9(), "rule__NumberConstraint__NullableAssignment_9");
					put(grammarAccess.getNumberConstraintAccess().getDerivedAssignment_10_0(), "rule__NumberConstraint__DerivedAssignment_10_0");
					put(grammarAccess.getNumberConstraintAccess().getWritableAssignment_10_1(), "rule__NumberConstraint__WritableAssignment_10_1");
					put(grammarAccess.getNumberConstraintAccess().getIsXSDAttAssignment_11(), "rule__NumberConstraint__IsXSDAttAssignment_11");
					put(grammarAccess.getAllConstraintAccess().getHasDefaultAssignment_0_0(), "rule__AllConstraint__HasDefaultAssignment_0_0");
					put(grammarAccess.getAllConstraintAccess().getDefaultValueAssignment_0_1(), "rule__AllConstraint__DefaultValueAssignment_0_1");
					put(grammarAccess.getAllConstraintAccess().getIsFixedAssignment_1_0(), "rule__AllConstraint__IsFixedAssignment_1_0");
					put(grammarAccess.getAllConstraintAccess().getFixedValueAssignment_1_1(), "rule__AllConstraint__FixedValueAssignment_1_1");
					put(grammarAccess.getAllConstraintAccess().getMinLenAssignment_2_1(), "rule__AllConstraint__MinLenAssignment_2_1");
					put(grammarAccess.getAllConstraintAccess().getMaxLenAssignment_3_1(), "rule__AllConstraint__MaxLenAssignment_3_1");
					put(grammarAccess.getAllConstraintAccess().getFixeLenAssignment_4_1(), "rule__AllConstraint__FixeLenAssignment_4_1");
					put(grammarAccess.getAllConstraintAccess().getPaddleAssignment_5_1(), "rule__AllConstraint__PaddleAssignment_5_1");
					put(grammarAccess.getAllConstraintAccess().getIsIdAssignment_6(), "rule__AllConstraint__IsIdAssignment_6");
					put(grammarAccess.getAllConstraintAccess().getNullableAssignment_7(), "rule__AllConstraint__NullableAssignment_7");
					put(grammarAccess.getAllConstraintAccess().getDerivedAssignment_8_0(), "rule__AllConstraint__DerivedAssignment_8_0");
					put(grammarAccess.getAllConstraintAccess().getWritableAssignment_8_1(), "rule__AllConstraint__WritableAssignment_8_1");
					put(grammarAccess.getAllConstraintAccess().getIsXSDAttAssignment_9(), "rule__AllConstraint__IsXSDAttAssignment_9");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			fr.chaunier.xtext.omcst.om.ui.contentassist.antlr.internal.InternalOmcstDslParser typedParser = (fr.chaunier.xtext.omcst.om.ui.contentassist.antlr.internal.InternalOmcstDslParser) parser;
			typedParser.entryRuleDomainModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public OmcstDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(OmcstDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
