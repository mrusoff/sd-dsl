/*
* generated by Xtext
*/
package fr.chaunier.xtext.map.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import fr.chaunier.xtext.map.services.MapDslGrammarAccess;

public class MapDslParser extends AbstractContentAssistParser {
	
	@Inject
	private MapDslGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected fr.chaunier.xtext.map.ui.contentassist.antlr.internal.InternalMapDslParser createParser() {
		fr.chaunier.xtext.map.ui.contentassist.antlr.internal.InternalMapDslParser result = new fr.chaunier.xtext.map.ui.contentassist.antlr.internal.InternalMapDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getFeatureMapAccess().getAlternatives_0(), "rule__FeatureMap__Alternatives_0");
					put(grammarAccess.getExpressionAccess().getAlternatives(), "rule__Expression__Alternatives");
					put(grammarAccess.getModelAccess().getGroup(), "rule__Model__Group__0");
					put(grammarAccess.getImportAccess().getGroup(), "rule__Import__Group__0");
					put(grammarAccess.getQualifiedNameWithWildCardAccess().getGroup(), "rule__QualifiedNameWithWildCard__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
					put(grammarAccess.getRootModuleAccess().getGroup(), "rule__RootModule__Group__0");
					put(grammarAccess.getRuleAccess().getGroup(), "rule__Rule__Group__0");
					put(grammarAccess.getRuleAccess().getGroup_2(), "rule__Rule__Group_2__0");
					put(grammarAccess.getRuleAccess().getGroup_3(), "rule__Rule__Group_3__0");
					put(grammarAccess.getFuctionAccess().getGroup(), "rule__Fuction__Group__0");
					put(grammarAccess.getFuctionInAccess().getGroup(), "rule__FuctionIn__Group__0");
					put(grammarAccess.getFuctionInAccess().getGroup_3(), "rule__FuctionIn__Group_3__0");
					put(grammarAccess.getFuctionInAccess().getGroup_3_1(), "rule__FuctionIn__Group_3_1__0");
					put(grammarAccess.getFuctionOutAccess().getGroup(), "rule__FuctionOut__Group__0");
					put(grammarAccess.getFuctionOutAccess().getGroup_3(), "rule__FuctionOut__Group_3__0");
					put(grammarAccess.getFuctionOutAccess().getGroup_3_1(), "rule__FuctionOut__Group_3_1__0");
					put(grammarAccess.getMappingModuleAccess().getGroup(), "rule__MappingModule__Group__0");
					put(grammarAccess.getMappingModuleAccess().getGroup_8(), "rule__MappingModule__Group_8__0");
					put(grammarAccess.getFeatureMapAccess().getGroup(), "rule__FeatureMap__Group__0");
					put(grammarAccess.getFeatureMapAccess().getGroup_0_0(), "rule__FeatureMap__Group_0_0__0");
					put(grammarAccess.getFeatureMapAccess().getGroup_0_1(), "rule__FeatureMap__Group_0_1__0");
					put(grammarAccess.getFeatureMapAccess().getGroup_0_1_4(), "rule__FeatureMap__Group_0_1_4__0");
					put(grammarAccess.getFeatureMapAccess().getGroup_0_2(), "rule__FeatureMap__Group_0_2__0");
					put(grammarAccess.getFeatureMapAccess().getGroup_0_2_5(), "rule__FeatureMap__Group_0_2_5__0");
					put(grammarAccess.getFeatureMapAccess().getGroup_0_3(), "rule__FeatureMap__Group_0_3__0");
					put(grammarAccess.getFeatureMapAccess().getGroup_0_4(), "rule__FeatureMap__Group_0_4__0");
					put(grammarAccess.getFeatureMapAccess().getGroup_0_4_2(), "rule__FeatureMap__Group_0_4_2__0");
					put(grammarAccess.getFeatureMapAccess().getGroup_0_5(), "rule__FeatureMap__Group_0_5__0");
					put(grammarAccess.getFeatureMapAccess().getGroup_0_6(), "rule__FeatureMap__Group_0_6__0");
					put(grammarAccess.getFeatureMapAccess().getGroup_0_6_2(), "rule__FeatureMap__Group_0_6_2__0");
					put(grammarAccess.getFeatureMapAccess().getGroup_1(), "rule__FeatureMap__Group_1__0");
					put(grammarAccess.getModelAccess().getNameAssignment_1(), "rule__Model__NameAssignment_1");
					put(grammarAccess.getModelAccess().getDocumentationAssignment_2(), "rule__Model__DocumentationAssignment_2");
					put(grammarAccess.getModelAccess().getImportsAssignment_3(), "rule__Model__ImportsAssignment_3");
					put(grammarAccess.getModelAccess().getRulesAssignment_4(), "rule__Model__RulesAssignment_4");
					put(grammarAccess.getModelAccess().getFuctionsAssignment_5(), "rule__Model__FuctionsAssignment_5");
					put(grammarAccess.getModelAccess().getMappingModulesAssignment_6(), "rule__Model__MappingModulesAssignment_6");
					put(grammarAccess.getModelAccess().getRootsAssignment_7(), "rule__Model__RootsAssignment_7");
					put(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1(), "rule__Import__ImportedNamespaceAssignment_1");
					put(grammarAccess.getRootModuleAccess().getRootRefAssignment_1(), "rule__RootModule__RootRefAssignment_1");
					put(grammarAccess.getRootModuleAccess().getDocumentationAssignment_2(), "rule__RootModule__DocumentationAssignment_2");
					put(grammarAccess.getRuleAccess().getNameAssignment_1(), "rule__Rule__NameAssignment_1");
					put(grammarAccess.getRuleAccess().getOperationAssignment_2_1(), "rule__Rule__OperationAssignment_2_1");
					put(grammarAccess.getRuleAccess().getArgsAssignment_3_1(), "rule__Rule__ArgsAssignment_3_1");
					put(grammarAccess.getFuctionAccess().getNameAssignment_1(), "rule__Fuction__NameAssignment_1");
					put(grammarAccess.getFuctionAccess().getInAssignment_2(), "rule__Fuction__InAssignment_2");
					put(grammarAccess.getFuctionAccess().getOutAssignment_3(), "rule__Fuction__OutAssignment_3");
					put(grammarAccess.getFuctionAccess().getDocumentationAssignment_4(), "rule__Fuction__DocumentationAssignment_4");
					put(grammarAccess.getFuctionInAccess().getInEntityAssignment_1(), "rule__FuctionIn__InEntityAssignment_1");
					put(grammarAccess.getFuctionInAccess().getInAttributeAssignment_3_0(), "rule__FuctionIn__InAttributeAssignment_3_0");
					put(grammarAccess.getFuctionInAccess().getInRefAttributeAssignment_3_1_2(), "rule__FuctionIn__InRefAttributeAssignment_3_1_2");
					put(grammarAccess.getFuctionOutAccess().getOutEntityAssignment_1(), "rule__FuctionOut__OutEntityAssignment_1");
					put(grammarAccess.getFuctionOutAccess().getOutAttributeAssignment_3_0(), "rule__FuctionOut__OutAttributeAssignment_3_0");
					put(grammarAccess.getFuctionOutAccess().getOutRefAttributeAssignment_3_1_2(), "rule__FuctionOut__OutRefAttributeAssignment_3_1_2");
					put(grammarAccess.getMappingModuleAccess().getNameAssignment_1(), "rule__MappingModule__NameAssignment_1");
					put(grammarAccess.getMappingModuleAccess().getEntitySourceAssignment_3(), "rule__MappingModule__EntitySourceAssignment_3");
					put(grammarAccess.getMappingModuleAccess().getEntityTargetAssignment_5(), "rule__MappingModule__EntityTargetAssignment_5");
					put(grammarAccess.getMappingModuleAccess().getDocumentationAssignment_6(), "rule__MappingModule__DocumentationAssignment_6");
					put(grammarAccess.getMappingModuleAccess().getMappedFeaturesAssignment_8_0(), "rule__MappingModule__MappedFeaturesAssignment_8_0");
					put(grammarAccess.getFeatureMapAccess().getFuctionMapAssignment_0_0_1(), "rule__FeatureMap__FuctionMapAssignment_0_0_1");
					put(grammarAccess.getFeatureMapAccess().getAttributeSourceAssignment_0_1_1(), "rule__FeatureMap__AttributeSourceAssignment_0_1_1");
					put(grammarAccess.getFeatureMapAccess().getAttributeTargetAssignment_0_1_3(), "rule__FeatureMap__AttributeTargetAssignment_0_1_3");
					put(grammarAccess.getFeatureMapAccess().getRefAttributeAssignment_0_1_4_2(), "rule__FeatureMap__RefAttributeAssignment_0_1_4_2");
					put(grammarAccess.getFeatureMapAccess().getWithModuleAssignment_0_2_1(), "rule__FeatureMap__WithModuleAssignment_0_2_1");
					put(grammarAccess.getFeatureMapAccess().getAttributeSourcesAssignment_0_2_2(), "rule__FeatureMap__AttributeSourcesAssignment_0_2_2");
					put(grammarAccess.getFeatureMapAccess().getAttributeTargetAssignment_0_2_4(), "rule__FeatureMap__AttributeTargetAssignment_0_2_4");
					put(grammarAccess.getFeatureMapAccess().getRefAttributeAssignment_0_2_5_2(), "rule__FeatureMap__RefAttributeAssignment_0_2_5_2");
					put(grammarAccess.getFeatureMapAccess().getAttributeSourceAssignment_0_3_1(), "rule__FeatureMap__AttributeSourceAssignment_0_3_1");
					put(grammarAccess.getFeatureMapAccess().getExprAssignment_0_3_3(), "rule__FeatureMap__ExprAssignment_0_3_3");
					put(grammarAccess.getFeatureMapAccess().getAttributeTargetAssignment_0_4_1(), "rule__FeatureMap__AttributeTargetAssignment_0_4_1");
					put(grammarAccess.getFeatureMapAccess().getRefAttributeAssignment_0_4_2_2(), "rule__FeatureMap__RefAttributeAssignment_0_4_2_2");
					put(grammarAccess.getFeatureMapAccess().getExprAssignment_0_4_4(), "rule__FeatureMap__ExprAssignment_0_4_4");
					put(grammarAccess.getFeatureMapAccess().getAttributeSourceAssignment_0_5_1(), "rule__FeatureMap__AttributeSourceAssignment_0_5_1");
					put(grammarAccess.getFeatureMapAccess().getAttributeTargetAssignment_0_6_1(), "rule__FeatureMap__AttributeTargetAssignment_0_6_1");
					put(grammarAccess.getFeatureMapAccess().getRefAttributeAssignment_0_6_2_2(), "rule__FeatureMap__RefAttributeAssignment_0_6_2_2");
					put(grammarAccess.getFeatureMapAccess().getRuleAssignment_1_1(), "rule__FeatureMap__RuleAssignment_1_1");
					put(grammarAccess.getFeatureMapAccess().getDocumentationAssignment_2(), "rule__FeatureMap__DocumentationAssignment_2");
					put(grammarAccess.getExpressionAccess().getValueAssignment_0(), "rule__Expression__ValueAssignment_0");
					put(grammarAccess.getExpressionAccess().getIntValueAssignment_1(), "rule__Expression__IntValueAssignment_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			fr.chaunier.xtext.map.ui.contentassist.antlr.internal.InternalMapDslParser typedParser = (fr.chaunier.xtext.map.ui.contentassist.antlr.internal.InternalMapDslParser) parser;
			typedParser.entryRuleModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public MapDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(MapDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
