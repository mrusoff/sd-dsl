/*
* generated by Xtext
*/
grammar InternalPathDsl;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package fr.chaunier.xtext.path.map.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package fr.chaunier.xtext.path.map.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import fr.chaunier.xtext.path.map.services.PathDslGrammarAccess;

}

@parser::members {
 
 	private PathDslGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(PathDslGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModelMap
entryRuleModelMap 
:
{ before(grammarAccess.getModelMapRule()); }
	 ruleModelMap
{ after(grammarAccess.getModelMapRule()); } 
	 EOF 
;

// Rule ModelMap
ruleModelMap
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelMapAccess().getGroup()); }
(rule__ModelMap__Group__0)
{ after(grammarAccess.getModelMapAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedNameWithWildCard
entryRuleQualifiedNameWithWildCard 
:
{ before(grammarAccess.getQualifiedNameWithWildCardRule()); }
	 ruleQualifiedNameWithWildCard
{ after(grammarAccess.getQualifiedNameWithWildCardRule()); } 
	 EOF 
;

// Rule QualifiedNameWithWildCard
ruleQualifiedNameWithWildCard
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameWithWildCardAccess().getGroup()); }
(rule__QualifiedNameWithWildCard__Group__0)
{ after(grammarAccess.getQualifiedNameWithWildCardAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMapEntity
entryRuleMapEntity 
:
{ before(grammarAccess.getMapEntityRule()); }
	 ruleMapEntity
{ after(grammarAccess.getMapEntityRule()); } 
	 EOF 
;

// Rule MapEntity
ruleMapEntity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMapEntityAccess().getGroup()); }
(rule__MapEntity__Group__0)
{ after(grammarAccess.getMapEntityAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCallMapEntity
entryRuleCallMapEntity 
:
{ before(grammarAccess.getCallMapEntityRule()); }
	 ruleCallMapEntity
{ after(grammarAccess.getCallMapEntityRule()); } 
	 EOF 
;

// Rule CallMapEntity
ruleCallMapEntity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCallMapEntityAccess().getGroup()); }
(rule__CallMapEntity__Group__0)
{ after(grammarAccess.getCallMapEntityAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAction
entryRuleAction 
:
{ before(grammarAccess.getActionRule()); }
	 ruleAction
{ after(grammarAccess.getActionRule()); } 
	 EOF 
;

// Rule Action
ruleAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActionAccess().getAlternatives()); }
(rule__Action__Alternatives)
{ after(grammarAccess.getActionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDocument
entryRuleDocument 
:
{ before(grammarAccess.getDocumentRule()); }
	 ruleDocument
{ after(grammarAccess.getDocumentRule()); } 
	 EOF 
;

// Rule Document
ruleDocument
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDocumentAccess().getGroup()); }
(rule__Document__Group__0)
{ after(grammarAccess.getDocumentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRuleDef
entryRuleRuleDef 
:
{ before(grammarAccess.getRuleDefRule()); }
	 ruleRuleDef
{ after(grammarAccess.getRuleDefRule()); } 
	 EOF 
;

// Rule RuleDef
ruleRuleDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRuleDefAccess().getGroup()); }
(rule__RuleDef__Group__0)
{ after(grammarAccess.getRuleDefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionDef
entryRuleFunctionDef 
:
{ before(grammarAccess.getFunctionDefRule()); }
	 ruleFunctionDef
{ after(grammarAccess.getFunctionDefRule()); } 
	 EOF 
;

// Rule FunctionDef
ruleFunctionDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionDefAccess().getGroup()); }
(rule__FunctionDef__Group__0)
{ after(grammarAccess.getFunctionDefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionParam
entryRuleFunctionParam 
:
{ before(grammarAccess.getFunctionParamRule()); }
	 ruleFunctionParam
{ after(grammarAccess.getFunctionParamRule()); } 
	 EOF 
;

// Rule FunctionParam
ruleFunctionParam
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionParamAccess().getGroup()); }
(rule__FunctionParam__Group__0)
{ after(grammarAccess.getFunctionParamAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeaturePath
entryRuleFeaturePath 
:
{ before(grammarAccess.getFeaturePathRule()); }
	 ruleFeaturePath
{ after(grammarAccess.getFeaturePathRule()); } 
	 EOF 
;

// Rule FeaturePath
ruleFeaturePath
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFeaturePathAccess().getGroup()); }
(rule__FeaturePath__Group__0)
{ after(grammarAccess.getFeaturePathAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeatureSet
entryRuleFeatureSet 
:
{ before(grammarAccess.getFeatureSetRule()); }
	 ruleFeatureSet
{ after(grammarAccess.getFeatureSetRule()); } 
	 EOF 
;

// Rule FeatureSet
ruleFeatureSet
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFeatureSetAccess().getGroup()); }
(rule__FeatureSet__Group__0)
{ after(grammarAccess.getFeatureSetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeaturePathFrom
entryRuleFeaturePathFrom 
:
{ before(grammarAccess.getFeaturePathFromRule()); }
	 ruleFeaturePathFrom
{ after(grammarAccess.getFeaturePathFromRule()); } 
	 EOF 
;

// Rule FeaturePathFrom
ruleFeaturePathFrom
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFeaturePathFromAccess().getGroup()); }
(rule__FeaturePathFrom__Group__0)
{ after(grammarAccess.getFeaturePathFromAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeaturePathTo
entryRuleFeaturePathTo 
:
{ before(grammarAccess.getFeaturePathToRule()); }
	 ruleFeaturePathTo
{ after(grammarAccess.getFeaturePathToRule()); } 
	 EOF 
;

// Rule FeaturePathTo
ruleFeaturePathTo
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFeaturePathToAccess().getGroup()); }
(rule__FeaturePathTo__Group__0)
{ after(grammarAccess.getFeaturePathToAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePathHead
entryRulePathHead 
:
{ before(grammarAccess.getPathHeadRule()); }
	 rulePathHead
{ after(grammarAccess.getPathHeadRule()); } 
	 EOF 
;

// Rule PathHead
rulePathHead
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPathHeadAccess().getGroup()); }
(rule__PathHead__Group__0)
{ after(grammarAccess.getPathHeadAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePathTail
entryRulePathTail 
:
{ before(grammarAccess.getPathTailRule()); }
	 rulePathTail
{ after(grammarAccess.getPathTailRule()); } 
	 EOF 
;

// Rule PathTail
rulePathTail
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPathTailAccess().getGroup()); }
(rule__PathTail__Group__0)
{ after(grammarAccess.getPathTailAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleFileSpecModel
entryRuleFileSpecModel 
:
{ before(grammarAccess.getFileSpecModelRule()); }
	 ruleFileSpecModel
{ after(grammarAccess.getFileSpecModelRule()); } 
	 EOF 
;

// Rule FileSpecModel
ruleFileSpecModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFileSpecModelAccess().getGroup()); }
(rule__FileSpecModel__Group__0)
{ after(grammarAccess.getFileSpecModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSpecLine
entryRuleSpecLine 
:
{ before(grammarAccess.getSpecLineRule()); }
	 ruleSpecLine
{ after(grammarAccess.getSpecLineRule()); } 
	 EOF 
;

// Rule SpecLine
ruleSpecLine
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSpecLineAccess().getAlternatives()); }
(rule__SpecLine__Alternatives)
{ after(grammarAccess.getSpecLineAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSpecInfo
entryRuleSpecInfo 
:
{ before(grammarAccess.getSpecInfoRule()); }
	 ruleSpecInfo
{ after(grammarAccess.getSpecInfoRule()); } 
	 EOF 
;

// Rule SpecInfo
ruleSpecInfo
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSpecInfoAccess().getGroup()); }
(rule__SpecInfo__Group__0)
{ after(grammarAccess.getSpecInfoAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSpecVersion
entryRuleSpecVersion 
:
{ before(grammarAccess.getSpecVersionRule()); }
	 ruleSpecVersion
{ after(grammarAccess.getSpecVersionRule()); } 
	 EOF 
;

// Rule SpecVersion
ruleSpecVersion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSpecVersionAccess().getGroup()); }
(rule__SpecVersion__Group__0)
{ after(grammarAccess.getSpecVersionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTerminalExpression
entryRuleTerminalExpression 
:
{ before(grammarAccess.getTerminalExpressionRule()); }
	 ruleTerminalExpression
{ after(grammarAccess.getTerminalExpressionRule()); } 
	 EOF 
;

// Rule TerminalExpression
ruleTerminalExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTerminalExpressionAccess().getAlternatives()); }
(rule__TerminalExpression__Alternatives)
{ after(grammarAccess.getTerminalExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntVar
entryRuleIntVar 
:
{ before(grammarAccess.getIntVarRule()); }
	 ruleIntVar
{ after(grammarAccess.getIntVarRule()); } 
	 EOF 
;

// Rule IntVar
ruleIntVar
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntVarAccess().getValueAssignment()); }
(rule__IntVar__ValueAssignment)
{ after(grammarAccess.getIntVarAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumberVar
entryRuleNumberVar 
:
{ before(grammarAccess.getNumberVarRule()); }
	 ruleNumberVar
{ after(grammarAccess.getNumberVarRule()); } 
	 EOF 
;

// Rule NumberVar
ruleNumberVar
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumberVarAccess().getValueAssignment()); }
(rule__NumberVar__ValueAssignment)
{ after(grammarAccess.getNumberVarAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringVar
entryRuleStringVar 
:
{ before(grammarAccess.getStringVarRule()); }
	 ruleStringVar
{ after(grammarAccess.getStringVarRule()); } 
	 EOF 
;

// Rule StringVar
ruleStringVar
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringVarAccess().getValueAssignment()); }
(rule__StringVar__ValueAssignment)
{ after(grammarAccess.getStringVarAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNullVar
entryRuleNullVar 
:
{ before(grammarAccess.getNullVarRule()); }
	 ruleNullVar
{ after(grammarAccess.getNullVarRule()); } 
	 EOF 
;

// Rule NullVar
ruleNullVar
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNullVarAccess().getValueAssignment()); }
(rule__NullVar__ValueAssignment)
{ after(grammarAccess.getNullVarAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBoolVar
entryRuleBoolVar 
:
{ before(grammarAccess.getBoolVarRule()); }
	 ruleBoolVar
{ after(grammarAccess.getBoolVarRule()); } 
	 EOF 
;

// Rule BoolVar
ruleBoolVar
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBoolVarAccess().getAlternatives()); }
(rule__BoolVar__Alternatives)
{ after(grammarAccess.getBoolVarAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule InOut
ruleInOut
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInOutAccess().getAlternatives()); }
(rule__InOut__Alternatives)
{ after(grammarAccess.getInOutAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Action__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getFunctionDefParserRuleCall_0()); }
	ruleFunctionDef
{ after(grammarAccess.getActionAccess().getFunctionDefParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getActionAccess().getRuleDefParserRuleCall_1()); }
	ruleRuleDef
{ after(grammarAccess.getActionAccess().getRuleDefParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getActionAccess().getFeatureSetParserRuleCall_2()); }
	ruleFeatureSet
{ after(grammarAccess.getActionAccess().getFeatureSetParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getActionAccess().getFeaturePathParserRuleCall_3()); }
	ruleFeaturePath
{ after(grammarAccess.getActionAccess().getFeaturePathParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getActionAccess().getCallMapEntityParserRuleCall_4()); }
	ruleCallMapEntity
{ after(grammarAccess.getActionAccess().getCallMapEntityParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getActionAccess().getDocumentParserRuleCall_5()); }
	ruleDocument
{ after(grammarAccess.getActionAccess().getDocumentParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpecLine__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecLineAccess().getSpecInfoParserRuleCall_0()); }
	ruleSpecInfo
{ after(grammarAccess.getSpecLineAccess().getSpecInfoParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getSpecLineAccess().getSpecVersionParserRuleCall_1()); }
	ruleSpecVersion
{ after(grammarAccess.getSpecLineAccess().getSpecVersionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getIntAssignment_0()); }
(rule__TerminalExpression__IntAssignment_0)
{ after(grammarAccess.getTerminalExpressionAccess().getIntAssignment_0()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getNumberAssignment_1()); }
(rule__TerminalExpression__NumberAssignment_1)
{ after(grammarAccess.getTerminalExpressionAccess().getNumberAssignment_1()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getNullAssignment_2()); }
(rule__TerminalExpression__NullAssignment_2)
{ after(grammarAccess.getTerminalExpressionAccess().getNullAssignment_2()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getBoolAssignment_3()); }
(rule__TerminalExpression__BoolAssignment_3)
{ after(grammarAccess.getTerminalExpressionAccess().getBoolAssignment_3()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getStringAssignment_4()); }
(rule__TerminalExpression__StringAssignment_4)
{ after(grammarAccess.getTerminalExpressionAccess().getStringAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BoolVar__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoolVarAccess().getValueAssignment_0()); }
(rule__BoolVar__ValueAssignment_0)
{ after(grammarAccess.getBoolVarAccess().getValueAssignment_0()); }
)

    |(
{ before(grammarAccess.getBoolVarAccess().getFalseKeyword_1()); }

	'false' 

{ after(grammarAccess.getBoolVarAccess().getFalseKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InOut__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInOutAccess().getInEnumLiteralDeclaration_0()); }
(	'In' 
)
{ after(grammarAccess.getInOutAccess().getInEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getInOutAccess().getOutEnumLiteralDeclaration_1()); }
(	'Out' 
)
{ after(grammarAccess.getInOutAccess().getOutEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__ModelMap__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelMap__Group__0__Impl
	rule__ModelMap__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelMap__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelMapAccess().getGroup_0()); }
(rule__ModelMap__Group_0__0)?
{ after(grammarAccess.getModelMapAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModelMap__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelMap__Group__1__Impl
	rule__ModelMap__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelMap__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelMapAccess().getImportsAssignment_1()); }
(rule__ModelMap__ImportsAssignment_1)*
{ after(grammarAccess.getModelMapAccess().getImportsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModelMap__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelMap__Group__2__Impl
	rule__ModelMap__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelMap__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelMapAccess().getRulesAssignment_2()); }
(rule__ModelMap__RulesAssignment_2)*
{ after(grammarAccess.getModelMapAccess().getRulesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModelMap__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelMap__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelMap__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelMapAccess().getMappingAssignment_3()); }
(rule__ModelMap__MappingAssignment_3)*
{ after(grammarAccess.getModelMapAccess().getMappingAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ModelMap__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelMap__Group_0__0__Impl
	rule__ModelMap__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelMap__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelMapAccess().getLeftSquareBracketKeyword_0_0()); }

	'[' 

{ after(grammarAccess.getModelMapAccess().getLeftSquareBracketKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModelMap__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelMap__Group_0__1__Impl
	rule__ModelMap__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelMap__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelMapAccess().getSpecAssignment_0_1()); }
(rule__ModelMap__SpecAssignment_0_1)
{ after(grammarAccess.getModelMapAccess().getSpecAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModelMap__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelMap__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelMap__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelMapAccess().getRightSquareBracketKeyword_0_2()); }

	']' 

{ after(grammarAccess.getModelMapAccess().getRightSquareBracketKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
(rule__Import__ImportedNamespaceAssignment_1)
{ after(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedNameWithWildCard__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildCard__Group__0__Impl
	rule__QualifiedNameWithWildCard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildCard__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildCardAccess().getQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName
{ after(grammarAccess.getQualifiedNameWithWildCardAccess().getQualifiedNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildCard__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildCard__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildCard__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildCardAccess().getFullStopAsteriskKeyword_1()); }
(
	'.*' 
)?
{ after(grammarAccess.getQualifiedNameWithWildCardAccess().getFullStopAsteriskKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MapEntity__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapEntity__Group__0__Impl
	rule__MapEntity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapEntity__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapEntityAccess().getMappingKeyword_0()); }

	'mapping' 

{ after(grammarAccess.getMapEntityAccess().getMappingKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MapEntity__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapEntity__Group__1__Impl
	rule__MapEntity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MapEntity__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapEntityAccess().getNameAssignment_1()); }
(rule__MapEntity__NameAssignment_1)
{ after(grammarAccess.getMapEntityAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MapEntity__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapEntity__Group__2__Impl
	rule__MapEntity__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MapEntity__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapEntityAccess().getEntitySourceKeyword_2()); }

	'Entity source' 

{ after(grammarAccess.getMapEntityAccess().getEntitySourceKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MapEntity__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapEntity__Group__3__Impl
	rule__MapEntity__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MapEntity__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapEntityAccess().getEntityFromAssignment_3()); }
(rule__MapEntity__EntityFromAssignment_3)
{ after(grammarAccess.getMapEntityAccess().getEntityFromAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MapEntity__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapEntity__Group__4__Impl
	rule__MapEntity__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MapEntity__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapEntityAccess().getEntityTargetKeyword_4()); }

	'Entity target' 

{ after(grammarAccess.getMapEntityAccess().getEntityTargetKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MapEntity__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapEntity__Group__5__Impl
	rule__MapEntity__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MapEntity__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapEntityAccess().getEntityToAssignment_5()); }
(rule__MapEntity__EntityToAssignment_5)
{ after(grammarAccess.getMapEntityAccess().getEntityToAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MapEntity__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapEntity__Group__6__Impl
	rule__MapEntity__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__MapEntity__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapEntityAccess().getLeftParenthesisKeyword_6()); }

	'(' 

{ after(grammarAccess.getMapEntityAccess().getLeftParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MapEntity__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapEntity__Group__7__Impl
	rule__MapEntity__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__MapEntity__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapEntityAccess().getActionsAssignment_7()); }
(rule__MapEntity__ActionsAssignment_7)*
{ after(grammarAccess.getMapEntityAccess().getActionsAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MapEntity__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapEntity__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapEntity__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapEntityAccess().getRightParenthesisKeyword_8()); }

	')' 

{ after(grammarAccess.getMapEntityAccess().getRightParenthesisKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__CallMapEntity__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallMapEntity__Group__0__Impl
	rule__CallMapEntity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CallMapEntity__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallMapEntityAccess().getUseMappingKeyword_0()); }

	'use mapping' 

{ after(grammarAccess.getCallMapEntityAccess().getUseMappingKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallMapEntity__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallMapEntity__Group__1__Impl
	rule__CallMapEntity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CallMapEntity__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallMapEntityAccess().getMappingAssignment_1()); }
(rule__CallMapEntity__MappingAssignment_1)
{ after(grammarAccess.getCallMapEntityAccess().getMappingAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallMapEntity__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallMapEntity__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CallMapEntity__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallMapEntityAccess().getGroup_2()); }
(rule__CallMapEntity__Group_2__0)?
{ after(grammarAccess.getCallMapEntityAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CallMapEntity__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallMapEntity__Group_2__0__Impl
	rule__CallMapEntity__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CallMapEntity__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallMapEntityAccess().getWhithMapKeyword_2_0()); }

	'whith map' 

{ after(grammarAccess.getCallMapEntityAccess().getWhithMapKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallMapEntity__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallMapEntity__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CallMapEntity__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallMapEntityAccess().getFeaturePathAssignment_2_1()); }
(rule__CallMapEntity__FeaturePathAssignment_2_1)
{ after(grammarAccess.getCallMapEntityAccess().getFeaturePathAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Document__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Document__Group__0__Impl
	rule__Document__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Document__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDocumentAccess().getDocKeyword_0()); }

	'doc' 

{ after(grammarAccess.getDocumentAccess().getDocKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Document__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Document__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Document__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDocumentAccess().getDocumentAssignment_1()); }
(rule__Document__DocumentAssignment_1)
{ after(grammarAccess.getDocumentAccess().getDocumentAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RuleDef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDef__Group__0__Impl
	rule__RuleDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDefAccess().getDefineRuleKeyword_0()); }

	'define rule' 

{ after(grammarAccess.getRuleDefAccess().getDefineRuleKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleDef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDef__Group__1__Impl
	rule__RuleDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDefAccess().getNameAssignment_1()); }
(rule__RuleDef__NameAssignment_1)
{ after(grammarAccess.getRuleDefAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleDef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDef__Group__2__Impl
	rule__RuleDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDefAccess().getGroup_2()); }
(rule__RuleDef__Group_2__0)?
{ after(grammarAccess.getRuleDefAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleDef__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDef__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDef__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDefAccess().getDescriptionAssignment_3()); }
(rule__RuleDef__DescriptionAssignment_3)?
{ after(grammarAccess.getRuleDefAccess().getDescriptionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__RuleDef__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDef__Group_2__0__Impl
	rule__RuleDef__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDef__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDefAccess().getOperationKeyword_2_0()); }

	'operation' 

{ after(grammarAccess.getRuleDefAccess().getOperationKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleDef__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDef__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDef__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDefAccess().getOperationAssignment_2_1()); }
(rule__RuleDef__OperationAssignment_2_1)
{ after(grammarAccess.getRuleDefAccess().getOperationAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionDef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDef__Group__0__Impl
	rule__FunctionDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefAccess().getFonctionKeyword_0()); }

	'fonction' 

{ after(grammarAccess.getFunctionDefAccess().getFonctionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDef__Group__1__Impl
	rule__FunctionDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefAccess().getNameAssignment_1()); }
(rule__FunctionDef__NameAssignment_1)
{ after(grammarAccess.getFunctionDefAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDef__Group__2__Impl
	rule__FunctionDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefAccess().getGroup_2()); }
(rule__FunctionDef__Group_2__0)?
{ after(grammarAccess.getFunctionDefAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDef__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDef__Group__3__Impl
	rule__FunctionDef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDef__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefAccess().getDescriptionAssignment_3()); }
(rule__FunctionDef__DescriptionAssignment_3)?
{ after(grammarAccess.getFunctionDefAccess().getDescriptionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDef__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDef__Group__4__Impl
	rule__FunctionDef__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDef__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getFunctionDefAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDef__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDef__Group__5__Impl
	rule__FunctionDef__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDef__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefAccess().getParamsAssignment_5()); }
(rule__FunctionDef__ParamsAssignment_5)*
{ after(grammarAccess.getFunctionDefAccess().getParamsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDef__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDef__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDef__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getFunctionDefAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__FunctionDef__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDef__Group_2__0__Impl
	rule__FunctionDef__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDef__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefAccess().getRuleKeyword_2_0()); }

	'rule' 

{ after(grammarAccess.getFunctionDefAccess().getRuleKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDef__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDef__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDef__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefAccess().getRuleAssignment_2_1()); }
(rule__FunctionDef__RuleAssignment_2_1)
{ after(grammarAccess.getFunctionDefAccess().getRuleAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionParam__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionParam__Group__0__Impl
	rule__FunctionParam__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionParam__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionParamAccess().getInAssignment_0()); }
(rule__FunctionParam__InAssignment_0)
{ after(grammarAccess.getFunctionParamAccess().getInAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionParam__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionParam__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionParam__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionParamAccess().getPathAssignment_1()); }
(rule__FunctionParam__PathAssignment_1)
{ after(grammarAccess.getFunctionParamAccess().getPathAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FeaturePath__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeaturePath__Group__0__Impl
	rule__FeaturePath__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeaturePath__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeaturePathAccess().getFromAssignment_0()); }
(rule__FeaturePath__FromAssignment_0)
{ after(grammarAccess.getFeaturePathAccess().getFromAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeaturePath__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeaturePath__Group__1__Impl
	rule__FeaturePath__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FeaturePath__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeaturePathAccess().getToAssignment_1()); }
(rule__FeaturePath__ToAssignment_1)
{ after(grammarAccess.getFeaturePathAccess().getToAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeaturePath__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeaturePath__Group__2__Impl
	rule__FeaturePath__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FeaturePath__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeaturePathAccess().getForEachAssignment_2()); }
(rule__FeaturePath__ForEachAssignment_2)?
{ after(grammarAccess.getFeaturePathAccess().getForEachAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeaturePath__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeaturePath__Group__3__Impl
	rule__FeaturePath__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FeaturePath__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeaturePathAccess().getGroup_3()); }
(rule__FeaturePath__Group_3__0)?
{ after(grammarAccess.getFeaturePathAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeaturePath__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeaturePath__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeaturePath__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeaturePathAccess().getDescriptionAssignment_4()); }
(rule__FeaturePath__DescriptionAssignment_4)?
{ after(grammarAccess.getFeaturePathAccess().getDescriptionAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__FeaturePath__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeaturePath__Group_3__0__Impl
	rule__FeaturePath__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeaturePath__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeaturePathAccess().getRuleKeyword_3_0()); }

	'rule' 

{ after(grammarAccess.getFeaturePathAccess().getRuleKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeaturePath__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeaturePath__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeaturePath__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeaturePathAccess().getRuleAssignment_3_1()); }
(rule__FeaturePath__RuleAssignment_3_1)
{ after(grammarAccess.getFeaturePathAccess().getRuleAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FeatureSet__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureSet__Group__0__Impl
	rule__FeatureSet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureSet__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureSetAccess().getSetKeyword_0()); }

	'set' 

{ after(grammarAccess.getFeatureSetAccess().getSetKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureSet__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureSet__Group__1__Impl
	rule__FeatureSet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureSet__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureSetAccess().getInAssignment_1()); }
(rule__FeatureSet__InAssignment_1)
{ after(grammarAccess.getFeatureSetAccess().getInAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureSet__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureSet__Group__2__Impl
	rule__FeatureSet__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureSet__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureSetAccess().getPathAssignment_2()); }
(rule__FeatureSet__PathAssignment_2)
{ after(grammarAccess.getFeatureSetAccess().getPathAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureSet__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureSet__Group__3__Impl
	rule__FeatureSet__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureSet__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureSetAccess().getEqualsSignKeyword_3()); }

	'=' 

{ after(grammarAccess.getFeatureSetAccess().getEqualsSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureSet__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureSet__Group__4__Impl
	rule__FeatureSet__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureSet__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureSetAccess().getValueAssignment_4()); }
(rule__FeatureSet__ValueAssignment_4)
{ after(grammarAccess.getFeatureSetAccess().getValueAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureSet__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureSet__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureSet__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureSetAccess().getDescriptionAssignment_5()); }
(rule__FeatureSet__DescriptionAssignment_5)?
{ after(grammarAccess.getFeatureSetAccess().getDescriptionAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__FeaturePathFrom__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeaturePathFrom__Group__0__Impl
	rule__FeaturePathFrom__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeaturePathFrom__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeaturePathFromAccess().getFromKeyword_0()); }

	'from' 

{ after(grammarAccess.getFeaturePathFromAccess().getFromKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeaturePathFrom__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeaturePathFrom__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeaturePathFrom__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeaturePathFromAccess().getPathAssignment_1()); }
(rule__FeaturePathFrom__PathAssignment_1)
{ after(grammarAccess.getFeaturePathFromAccess().getPathAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FeaturePathTo__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeaturePathTo__Group__0__Impl
	rule__FeaturePathTo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeaturePathTo__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeaturePathToAccess().getToKeyword_0()); }

	'to' 

{ after(grammarAccess.getFeaturePathToAccess().getToKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeaturePathTo__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeaturePathTo__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeaturePathTo__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeaturePathToAccess().getPathAssignment_1()); }
(rule__FeaturePathTo__PathAssignment_1)
{ after(grammarAccess.getFeaturePathToAccess().getPathAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PathHead__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PathHead__Group__0__Impl
	rule__PathHead__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PathHead__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathHeadAccess().getEntityAssignment_0()); }
(rule__PathHead__EntityAssignment_0)
{ after(grammarAccess.getPathHeadAccess().getEntityAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PathHead__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PathHead__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PathHead__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathHeadAccess().getTailAssignment_1()); }
(rule__PathHead__TailAssignment_1)
{ after(grammarAccess.getPathHeadAccess().getTailAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PathTail__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PathTail__Group__0__Impl
	rule__PathTail__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PathTail__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathTailAccess().getFullStopKeyword_0()); }

	'.' 

{ after(grammarAccess.getPathTailAccess().getFullStopKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PathTail__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PathTail__Group__1__Impl
	rule__PathTail__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PathTail__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathTailAccess().getFeatureAssignment_1()); }
(rule__PathTail__FeatureAssignment_1)
{ after(grammarAccess.getPathTailAccess().getFeatureAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PathTail__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PathTail__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PathTail__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathTailAccess().getTailAssignment_2()); }
(rule__PathTail__TailAssignment_2)?
{ after(grammarAccess.getPathTailAccess().getTailAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FileSpecModel__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FileSpecModel__Group__0__Impl
	rule__FileSpecModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FileSpecModel__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileSpecModelAccess().getMappingAssignment_0()); }
(rule__FileSpecModel__MappingAssignment_0)
{ after(grammarAccess.getFileSpecModelAccess().getMappingAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FileSpecModel__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FileSpecModel__Group__1__Impl
	rule__FileSpecModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FileSpecModel__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileSpecModelAccess().getGroup_1()); }
(rule__FileSpecModel__Group_1__0)?
{ after(grammarAccess.getFileSpecModelAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FileSpecModel__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FileSpecModel__Group__2__Impl
	rule__FileSpecModel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FileSpecModel__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileSpecModelAccess().getGroup_2()); }
(rule__FileSpecModel__Group_2__0)?
{ after(grammarAccess.getFileSpecModelAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FileSpecModel__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FileSpecModel__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FileSpecModel__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileSpecModelAccess().getSpecLinesAssignment_3()); }
(rule__FileSpecModel__SpecLinesAssignment_3)*
{ after(grammarAccess.getFileSpecModelAccess().getSpecLinesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FileSpecModel__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FileSpecModel__Group_1__0__Impl
	rule__FileSpecModel__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FileSpecModel__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileSpecModelAccess().getSourcePathKeyword_1_0()); }

	'source path' 

{ after(grammarAccess.getFileSpecModelAccess().getSourcePathKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FileSpecModel__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FileSpecModel__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FileSpecModel__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileSpecModelAccess().getSourcePathAssignment_1_1()); }
(rule__FileSpecModel__SourcePathAssignment_1_1)
{ after(grammarAccess.getFileSpecModelAccess().getSourcePathAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FileSpecModel__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FileSpecModel__Group_2__0__Impl
	rule__FileSpecModel__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FileSpecModel__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileSpecModelAccess().getTargetPathKeyword_2_0()); }

	'target path' 

{ after(grammarAccess.getFileSpecModelAccess().getTargetPathKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FileSpecModel__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FileSpecModel__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FileSpecModel__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileSpecModelAccess().getTargetPathAssignment_2_1()); }
(rule__FileSpecModel__TargetPathAssignment_2_1)
{ after(grammarAccess.getFileSpecModelAccess().getTargetPathAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SpecInfo__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecInfo__Group__0__Impl
	rule__SpecInfo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecInfo__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecInfoAccess().getInfoKeyword_0()); }

	'info' 

{ after(grammarAccess.getSpecInfoAccess().getInfoKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpecInfo__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecInfo__Group__1__Impl
	rule__SpecInfo__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecInfo__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecInfoAccess().getTitleAssignment_1()); }
(rule__SpecInfo__TitleAssignment_1)
{ after(grammarAccess.getSpecInfoAccess().getTitleAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpecInfo__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecInfo__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecInfo__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecInfoAccess().getLabelAssignment_2()); }
(rule__SpecInfo__LabelAssignment_2)
{ after(grammarAccess.getSpecInfoAccess().getLabelAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SpecVersion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecVersion__Group__0__Impl
	rule__SpecVersion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecVersion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecVersionAccess().getVersionKeyword_0()); }

	'version' 

{ after(grammarAccess.getSpecVersionAccess().getVersionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpecVersion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecVersion__Group__1__Impl
	rule__SpecVersion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecVersion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecVersionAccess().getVersionAssignment_1()); }
(rule__SpecVersion__VersionAssignment_1)
{ after(grammarAccess.getSpecVersionAccess().getVersionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpecVersion__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecVersion__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecVersion__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecVersionAccess().getGroup_2()); }
(rule__SpecVersion__Group_2__0)?
{ after(grammarAccess.getSpecVersionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SpecVersion__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecVersion__Group_2__0__Impl
	rule__SpecVersion__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecVersion__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecVersionAccess().getCommentKeyword_2_0()); }

	'comment' 

{ after(grammarAccess.getSpecVersionAccess().getCommentKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpecVersion__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecVersion__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecVersion__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecVersionAccess().getCommentAssignment_2_1()); }
(rule__SpecVersion__CommentAssignment_2_1)
{ after(grammarAccess.getSpecVersionAccess().getCommentAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__ModelMap__SpecAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelMapAccess().getSpecFileSpecModelParserRuleCall_0_1_0()); }
	ruleFileSpecModel{ after(grammarAccess.getModelMapAccess().getSpecFileSpecModelParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModelMap__ImportsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelMapAccess().getImportsImportParserRuleCall_1_0()); }
	ruleImport{ after(grammarAccess.getModelMapAccess().getImportsImportParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModelMap__RulesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelMapAccess().getRulesRuleDefParserRuleCall_2_0()); }
	ruleRuleDef{ after(grammarAccess.getModelMapAccess().getRulesRuleDefParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModelMap__MappingAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelMapAccess().getMappingMapEntityParserRuleCall_3_0()); }
	ruleMapEntity{ after(grammarAccess.getModelMapAccess().getMappingMapEntityParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportedNamespaceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildCardParserRuleCall_1_0()); }
	ruleQualifiedNameWithWildCard{ after(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildCardParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MapEntity__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapEntityAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getMapEntityAccess().getNameQualifiedNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MapEntity__EntityFromAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapEntityAccess().getEntityFromEntityCrossReference_3_0()); }
(
{ before(grammarAccess.getMapEntityAccess().getEntityFromEntityQualifiedNameParserRuleCall_3_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getMapEntityAccess().getEntityFromEntityQualifiedNameParserRuleCall_3_0_1()); }
)
{ after(grammarAccess.getMapEntityAccess().getEntityFromEntityCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MapEntity__EntityToAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapEntityAccess().getEntityToEntityCrossReference_5_0()); }
(
{ before(grammarAccess.getMapEntityAccess().getEntityToEntityQualifiedNameParserRuleCall_5_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getMapEntityAccess().getEntityToEntityQualifiedNameParserRuleCall_5_0_1()); }
)
{ after(grammarAccess.getMapEntityAccess().getEntityToEntityCrossReference_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MapEntity__ActionsAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapEntityAccess().getActionsActionParserRuleCall_7_0()); }
	ruleAction{ after(grammarAccess.getMapEntityAccess().getActionsActionParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CallMapEntity__MappingAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallMapEntityAccess().getMappingMapEntityCrossReference_1_0()); }
(
{ before(grammarAccess.getCallMapEntityAccess().getMappingMapEntityQualifiedNameParserRuleCall_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getCallMapEntityAccess().getMappingMapEntityQualifiedNameParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getCallMapEntityAccess().getMappingMapEntityCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CallMapEntity__FeaturePathAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallMapEntityAccess().getFeaturePathFeaturePathParserRuleCall_2_1_0()); }
	ruleFeaturePath{ after(grammarAccess.getCallMapEntityAccess().getFeaturePathFeaturePathParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Document__DocumentAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDocumentAccess().getDocumentSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getDocumentAccess().getDocumentSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDef__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDefAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getRuleDefAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDef__OperationAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDefAccess().getOperationSTRINGTerminalRuleCall_2_1_0()); }
	RULE_STRING{ after(grammarAccess.getRuleDefAccess().getOperationSTRINGTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDef__DescriptionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDefAccess().getDescriptionSTRINGTerminalRuleCall_3_0()); }
	RULE_STRING{ after(grammarAccess.getRuleDefAccess().getDescriptionSTRINGTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDef__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getFunctionDefAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDef__RuleAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefAccess().getRuleRuleDefCrossReference_2_1_0()); }
(
{ before(grammarAccess.getFunctionDefAccess().getRuleRuleDefIDTerminalRuleCall_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getFunctionDefAccess().getRuleRuleDefIDTerminalRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getFunctionDefAccess().getRuleRuleDefCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDef__DescriptionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefAccess().getDescriptionSTRINGTerminalRuleCall_3_0()); }
	RULE_STRING{ after(grammarAccess.getFunctionDefAccess().getDescriptionSTRINGTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDef__ParamsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefAccess().getParamsFunctionParamParserRuleCall_5_0()); }
	ruleFunctionParam{ after(grammarAccess.getFunctionDefAccess().getParamsFunctionParamParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionParam__InAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionParamAccess().getInInOutEnumRuleCall_0_0()); }
	ruleInOut{ after(grammarAccess.getFunctionParamAccess().getInInOutEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionParam__PathAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionParamAccess().getPathPathTailParserRuleCall_1_0()); }
	rulePathTail{ after(grammarAccess.getFunctionParamAccess().getPathPathTailParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeaturePath__FromAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeaturePathAccess().getFromFeaturePathFromParserRuleCall_0_0()); }
	ruleFeaturePathFrom{ after(grammarAccess.getFeaturePathAccess().getFromFeaturePathFromParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeaturePath__ToAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeaturePathAccess().getToFeaturePathToParserRuleCall_1_0()); }
	ruleFeaturePathTo{ after(grammarAccess.getFeaturePathAccess().getToFeaturePathToParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeaturePath__ForEachAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeaturePathAccess().getForEachForEachKeyword_2_0()); }
(
{ before(grammarAccess.getFeaturePathAccess().getForEachForEachKeyword_2_0()); }

	'for each' 

{ after(grammarAccess.getFeaturePathAccess().getForEachForEachKeyword_2_0()); }
)

{ after(grammarAccess.getFeaturePathAccess().getForEachForEachKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeaturePath__RuleAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeaturePathAccess().getRuleRuleDefCrossReference_3_1_0()); }
(
{ before(grammarAccess.getFeaturePathAccess().getRuleRuleDefIDTerminalRuleCall_3_1_0_1()); }
	RULE_ID{ after(grammarAccess.getFeaturePathAccess().getRuleRuleDefIDTerminalRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getFeaturePathAccess().getRuleRuleDefCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeaturePath__DescriptionAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeaturePathAccess().getDescriptionSTRINGTerminalRuleCall_4_0()); }
	RULE_STRING{ after(grammarAccess.getFeaturePathAccess().getDescriptionSTRINGTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureSet__InAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureSetAccess().getInInOutEnumRuleCall_1_0()); }
	ruleInOut{ after(grammarAccess.getFeatureSetAccess().getInInOutEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureSet__PathAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureSetAccess().getPathPathTailParserRuleCall_2_0()); }
	rulePathTail{ after(grammarAccess.getFeatureSetAccess().getPathPathTailParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureSet__ValueAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureSetAccess().getValueTerminalExpressionParserRuleCall_4_0()); }
	ruleTerminalExpression{ after(grammarAccess.getFeatureSetAccess().getValueTerminalExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureSet__DescriptionAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureSetAccess().getDescriptionSTRINGTerminalRuleCall_5_0()); }
	RULE_STRING{ after(grammarAccess.getFeatureSetAccess().getDescriptionSTRINGTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeaturePathFrom__PathAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeaturePathFromAccess().getPathPathTailParserRuleCall_1_0()); }
	rulePathTail{ after(grammarAccess.getFeaturePathFromAccess().getPathPathTailParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeaturePathTo__PathAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeaturePathToAccess().getPathPathTailParserRuleCall_1_0()); }
	rulePathTail{ after(grammarAccess.getFeaturePathToAccess().getPathPathTailParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathHead__EntityAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathHeadAccess().getEntityEntityCrossReference_0_0()); }
(
{ before(grammarAccess.getPathHeadAccess().getEntityEntityIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getPathHeadAccess().getEntityEntityIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getPathHeadAccess().getEntityEntityCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathHead__TailAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathHeadAccess().getTailPathTailParserRuleCall_1_0()); }
	rulePathTail{ after(grammarAccess.getPathHeadAccess().getTailPathTailParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathTail__FeatureAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathTailAccess().getFeatureStructuralFeatureCrossReference_1_0()); }
(
{ before(grammarAccess.getPathTailAccess().getFeatureStructuralFeatureIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getPathTailAccess().getFeatureStructuralFeatureIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getPathTailAccess().getFeatureStructuralFeatureCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathTail__TailAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathTailAccess().getTailPathTailParserRuleCall_2_0()); }
	rulePathTail{ after(grammarAccess.getPathTailAccess().getTailPathTailParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FileSpecModel__MappingAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileSpecModelAccess().getMappingMapEntityCrossReference_0_0()); }
(
{ before(grammarAccess.getFileSpecModelAccess().getMappingMapEntityQualifiedNameParserRuleCall_0_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getFileSpecModelAccess().getMappingMapEntityQualifiedNameParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getFileSpecModelAccess().getMappingMapEntityCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FileSpecModel__SourcePathAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileSpecModelAccess().getSourcePathSTRINGTerminalRuleCall_1_1_0()); }
	RULE_STRING{ after(grammarAccess.getFileSpecModelAccess().getSourcePathSTRINGTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FileSpecModel__TargetPathAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileSpecModelAccess().getTargetPathSTRINGTerminalRuleCall_2_1_0()); }
	RULE_STRING{ after(grammarAccess.getFileSpecModelAccess().getTargetPathSTRINGTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FileSpecModel__SpecLinesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileSpecModelAccess().getSpecLinesSpecLineParserRuleCall_3_0()); }
	ruleSpecLine{ after(grammarAccess.getFileSpecModelAccess().getSpecLinesSpecLineParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SpecInfo__TitleAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecInfoAccess().getTitleSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getSpecInfoAccess().getTitleSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SpecInfo__LabelAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecInfoAccess().getLabelSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getSpecInfoAccess().getLabelSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SpecVersion__VersionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecVersionAccess().getVersionSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getSpecVersionAccess().getVersionSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SpecVersion__CommentAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecVersionAccess().getCommentSTRINGTerminalRuleCall_2_1_0()); }
	RULE_STRING{ after(grammarAccess.getSpecVersionAccess().getCommentSTRINGTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__IntAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getIntIntVarParserRuleCall_0_0()); }
	ruleIntVar{ after(grammarAccess.getTerminalExpressionAccess().getIntIntVarParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__NumberAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getNumberNumberVarParserRuleCall_1_0()); }
	ruleNumberVar{ after(grammarAccess.getTerminalExpressionAccess().getNumberNumberVarParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__NullAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getNullNullVarParserRuleCall_2_0()); }
	ruleNullVar{ after(grammarAccess.getTerminalExpressionAccess().getNullNullVarParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__BoolAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getBoolBoolVarParserRuleCall_3_0()); }
	ruleBoolVar{ after(grammarAccess.getTerminalExpressionAccess().getBoolBoolVarParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__StringAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getStringStringVarParserRuleCall_4_0()); }
	ruleStringVar{ after(grammarAccess.getTerminalExpressionAccess().getStringStringVarParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntVar__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntVarAccess().getValueBIGINTTerminalRuleCall_0()); }
	RULE_BIGINT{ after(grammarAccess.getIntVarAccess().getValueBIGINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumberVar__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberVarAccess().getValueNUMBERTerminalRuleCall_0()); }
	RULE_NUMBER{ after(grammarAccess.getNumberVarAccess().getValueNUMBERTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringVar__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringVarAccess().getValueSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getStringVarAccess().getValueSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NullVar__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullVarAccess().getValueNullKeyword_0()); }
(
{ before(grammarAccess.getNullVarAccess().getValueNullKeyword_0()); }

	'null' 

{ after(grammarAccess.getNullVarAccess().getValueNullKeyword_0()); }
)

{ after(grammarAccess.getNullVarAccess().getValueNullKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BoolVar__ValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoolVarAccess().getValueTrueKeyword_0_0()); }
(
{ before(grammarAccess.getBoolVarAccess().getValueTrueKeyword_0_0()); }

	'true' 

{ after(grammarAccess.getBoolVarAccess().getValueTrueKeyword_0_0()); }
)

{ after(grammarAccess.getBoolVarAccess().getValueTrueKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_BIGINT : ('0'..'9')*;

RULE_NUMBER : ('0'..'9')* ('.' ('0'..'9')+)?;

RULE_DATE : '0'..'1' '0'..'9' '.' '0'..'3' '0'..'9' '.' '0'..'9' '0'..'9' '0'..'9' '0'..'9';

RULE_INT : 'this one has been deactivated';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


