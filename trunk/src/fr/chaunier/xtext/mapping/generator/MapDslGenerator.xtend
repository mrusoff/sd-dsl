/*
 * generated by Xtext
 */
package fr.chaunier.xtext.mapping.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.IGenerator
import org.eclipse.xtext.generator.IFileSystemAccess
import fr.chaunier.xtext.mapping.mapDsl.*
import static extension org.eclipse.xtext.xtend2.lib.ResourceExtensions.*

class MapDslGenerator implements IGenerator {
	
	override void doGenerate(Resource resource, IFileSystemAccess fsa) {
		val textGenerator = new TextGenerator()
//		val textInGenerator = new TextInGenerator()
//		val textDebugGenerator = new TextDebugGenerator()
		val textileGenerator = new TextileGenerator()
	    for(model : resource.allContentsIterable.filter(typeof(ModelMap))) {
//	      fsa.generateFile("map/"+model.name+'.map.debug.text', textDebugGenerator.compileTxt(model))
	      fsa.generateFile("map/"+model.name+'.map.text', textGenerator.compileTxt(model))
	      fsa.generateFile("map/"+model.name+'.map.textile', textileGenerator.compileTxt(model))
	    }
	}
}
