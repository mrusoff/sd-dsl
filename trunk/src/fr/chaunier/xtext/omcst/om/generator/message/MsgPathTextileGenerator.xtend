/*
 * generated by Xtext
 */
package fr.chaunier.xtext.omcst.om.generator.message

import fr.chaunier.xtext.omcst.om.omcstDsl.*
import fr.chaunier.xtext.omcst.om.OmcstExtensions
import org.eclipse.xtext.naming.QualifiedName
import org.eclipse.xtext.naming.DefaultDeclarativeQualifiedNameProvider
		
class MsgPathTextileGenerator  {


// compile the message view 
  def compileTxt(XsdElement rootElement) '''
h1. entity root : «rootElement.xsdElement.name»
«var path = new java.lang.String()»
«var msgManager = new MsgManager()»
p{color:blue}. «rootElement.xsdElement.description»

h2. Attributes

table{border:1px solid black}.
|_.|_. Name |_. Type |_. Cardinality |_. Semantic |_. Constraint  |_. Documentation  |_.
«typeTxt(rootElement.xsdElement,msgManager,path)»
  '''	

  def dispatch typeTxt(Type e,MsgManager manager,String path) '''
  '''
  
  def dispatch typeTxt(Entity e,MsgManager msgManager,String path) '''
    «FOR f:e.features.filter(typeof(Attribute))»
       «featureTxt(f,msgManager,path)»
    «ENDFOR»
  '''
  def dispatch featureTxt(Attribute a,MsgManager msgManager,String path) '''
  «val om = new OmcstExtensions()»
  «IF a.type.referenced instanceof Entity»
|«msgManager.getNext()»|«path+'.'+a.name»|«a.type.referenced.name» | 
  «typeTxt(a.type.referenced,msgManager,path)»	
  «ELSE»
|«msgManager.getNext()»|«path+'.'+a.name»|«a.type.referenced.name» | 
  «ENDIF»   
   '''

/* 
  def dispatch featureTxt(Attribute a,MsgManager msgManager,String path) '''
  «val om = new OmcstExtensions()»
  «val qn = new DefaultDeclarativeQualifiedNameProvider()»
  «IF a.type.referenced instanceof Entity»
|«msgManager.getNext()»|«qn.getFullyQualifiedName(a)»|«a.type.referenced.name» | 
  «typeTxt(a.type.referenced,msgManager,path)»	
  «ELSE»
|«msgManager.getNext()»|«qn.getFullyQualifiedName(a)»|«a.type.referenced.name» | 
  «ENDIF»   
   '''
 */
 
  def dispatch featureTxt(Reference r,MsgManager msgManager,String path) '''
   '''


}
	
	
