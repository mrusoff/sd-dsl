/*
* generated by Xtext
*/
package fr.chaunier.xtext.om.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import fr.chaunier.xtext.om.services.OmDslGrammarAccess;

public class OmDslParser extends AbstractContentAssistParser {
	
	@Inject
	private OmDslGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected fr.chaunier.xtext.om.ui.contentassist.antlr.internal.InternalOmDslParser createParser() {
		fr.chaunier.xtext.om.ui.contentassist.antlr.internal.InternalOmDslParser result = new fr.chaunier.xtext.om.ui.contentassist.antlr.internal.InternalOmDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getAbstractElementAccess().getAlternatives(), "rule__AbstractElement__Alternatives");
					put(grammarAccess.getTypeAccess().getAlternatives(), "rule__Type__Alternatives");
					put(grammarAccess.getStructuralFeatureAccess().getAlternatives(), "rule__StructuralFeature__Alternatives");
					put(grammarAccess.getTypedElementAccess().getAlternatives(), "rule__TypedElement__Alternatives");
					put(grammarAccess.getVisibilityAccess().getAlternatives(), "rule__Visibility__Alternatives");
					put(grammarAccess.getImportAccess().getGroup(), "rule__Import__Group__0");
					put(grammarAccess.getPackageDeclarationAccess().getGroup(), "rule__PackageDeclaration__Group__0");
					put(grammarAccess.getPackageDeclarationAccess().getGroup_2(), "rule__PackageDeclaration__Group_2__0");
					put(grammarAccess.getPackageDeclarationAccess().getGroup_2_3(), "rule__PackageDeclaration__Group_2_3__0");
					put(grammarAccess.getDataTypeAccess().getGroup(), "rule__DataType__Group__0");
					put(grammarAccess.getDataTypeAccess().getGroup_2(), "rule__DataType__Group_2__0");
					put(grammarAccess.getDataTypeAccess().getGroup_2_3(), "rule__DataType__Group_2_3__0");
					put(grammarAccess.getEntityAccess().getGroup(), "rule__Entity__Group__0");
					put(grammarAccess.getEntityAccess().getGroup_3(), "rule__Entity__Group_3__0");
					put(grammarAccess.getEntityAccess().getGroup_4(), "rule__Entity__Group_4__0");
					put(grammarAccess.getEntityAccess().getGroup_4_3(), "rule__Entity__Group_4_3__0");
					put(grammarAccess.getFeatureAccess().getGroup(), "rule__Feature__Group__0");
					put(grammarAccess.getFeatureAccess().getGroup_1(), "rule__Feature__Group_1__0");
					put(grammarAccess.getFeatureAccess().getGroup_1_3(), "rule__Feature__Group_1_3__0");
					put(grammarAccess.getAttributeAccess().getGroup(), "rule__Attribute__Group__0");
					put(grammarAccess.getReferenceAccess().getGroup(), "rule__Reference__Group__0");
					put(grammarAccess.getReferenceAccess().getGroup_4(), "rule__Reference__Group_4__0");
					put(grammarAccess.getEnumerationAccess().getGroup(), "rule__Enumeration__Group__0");
					put(grammarAccess.getEnumerationLiteralAccess().getGroup(), "rule__EnumerationLiteral__Group__0");
					put(grammarAccess.getEnumerationLiteralAccess().getGroup_1(), "rule__EnumerationLiteral__Group_1__0");
					put(grammarAccess.getOperationAccess().getGroup(), "rule__Operation__Group__0");
					put(grammarAccess.getOperationAccess().getGroup_4(), "rule__Operation__Group_4__0");
					put(grammarAccess.getOperationAccess().getGroup_4_1(), "rule__Operation__Group_4_1__0");
					put(grammarAccess.getParameterAccess().getGroup(), "rule__Parameter__Group__0");
					put(grammarAccess.getTypeRefAccess().getGroup(), "rule__TypeRef__Group__0");
					put(grammarAccess.getQualifiedNameWithWildCardAccess().getGroup(), "rule__QualifiedNameWithWildCard__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
					put(grammarAccess.getAnnotationsAccess().getGroup(), "rule__Annotations__Group__0");
					put(grammarAccess.getAnnotationsAccess().getGroup_3(), "rule__Annotations__Group_3__0");
					put(grammarAccess.getAnnotationAccess().getGroup(), "rule__Annotation__Group__0");
					put(grammarAccess.getDomainModelAccess().getElementsAssignment(), "rule__DomainModel__ElementsAssignment");
					put(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1(), "rule__Import__ImportedNamespaceAssignment_1");
					put(grammarAccess.getPackageDeclarationAccess().getNameAssignment_1(), "rule__PackageDeclaration__NameAssignment_1");
					put(grammarAccess.getPackageDeclarationAccess().getAnnotationsAssignment_2_2(), "rule__PackageDeclaration__AnnotationsAssignment_2_2");
					put(grammarAccess.getPackageDeclarationAccess().getAnnotationsAssignment_2_3_1(), "rule__PackageDeclaration__AnnotationsAssignment_2_3_1");
					put(grammarAccess.getPackageDeclarationAccess().getElementsAssignment_4(), "rule__PackageDeclaration__ElementsAssignment_4");
					put(grammarAccess.getDataTypeAccess().getNameAssignment_1(), "rule__DataType__NameAssignment_1");
					put(grammarAccess.getDataTypeAccess().getAnnotationsAssignment_2_2(), "rule__DataType__AnnotationsAssignment_2_2");
					put(grammarAccess.getDataTypeAccess().getAnnotationsAssignment_2_3_1(), "rule__DataType__AnnotationsAssignment_2_3_1");
					put(grammarAccess.getDataTypeAccess().getDescriptionAssignment_3(), "rule__DataType__DescriptionAssignment_3");
					put(grammarAccess.getEntityAccess().getEntityTypeAssignment_0(), "rule__Entity__EntityTypeAssignment_0");
					put(grammarAccess.getEntityAccess().getNameAssignment_2(), "rule__Entity__NameAssignment_2");
					put(grammarAccess.getEntityAccess().getSuperTypeAssignment_3_1(), "rule__Entity__SuperTypeAssignment_3_1");
					put(grammarAccess.getEntityAccess().getAnnotationsAssignment_4_2(), "rule__Entity__AnnotationsAssignment_4_2");
					put(grammarAccess.getEntityAccess().getAnnotationsAssignment_4_3_1(), "rule__Entity__AnnotationsAssignment_4_3_1");
					put(grammarAccess.getEntityAccess().getDescriptionAssignment_5(), "rule__Entity__DescriptionAssignment_5");
					put(grammarAccess.getEntityAccess().getFeaturesAssignment_7(), "rule__Entity__FeaturesAssignment_7");
					put(grammarAccess.getFeatureAccess().getAnnotationsAssignment_1_2(), "rule__Feature__AnnotationsAssignment_1_2");
					put(grammarAccess.getFeatureAccess().getAnnotationsAssignment_1_3_1(), "rule__Feature__AnnotationsAssignment_1_3_1");
					put(grammarAccess.getFeatureAccess().getDescriptionAssignment_2(), "rule__Feature__DescriptionAssignment_2");
					put(grammarAccess.getAttributeAccess().getNameAssignment_0(), "rule__Attribute__NameAssignment_0");
					put(grammarAccess.getAttributeAccess().getTypeAssignment_2(), "rule__Attribute__TypeAssignment_2");
					put(grammarAccess.getReferenceAccess().getNameAssignment_1(), "rule__Reference__NameAssignment_1");
					put(grammarAccess.getReferenceAccess().getTypeAssignment_3(), "rule__Reference__TypeAssignment_3");
					put(grammarAccess.getReferenceAccess().getOppositeAssignment_4_1(), "rule__Reference__OppositeAssignment_4_1");
					put(grammarAccess.getEnumerationAccess().getNameAssignment_1(), "rule__Enumeration__NameAssignment_1");
					put(grammarAccess.getEnumerationAccess().getEnumerationLiteralsAssignment_3(), "rule__Enumeration__EnumerationLiteralsAssignment_3");
					put(grammarAccess.getEnumerationLiteralAccess().getNameAssignment_0(), "rule__EnumerationLiteral__NameAssignment_0");
					put(grammarAccess.getEnumerationLiteralAccess().getPersistedValueAssignment_1_1(), "rule__EnumerationLiteral__PersistedValueAssignment_1_1");
					put(grammarAccess.getOperationAccess().getVisibilityAssignment_0(), "rule__Operation__VisibilityAssignment_0");
					put(grammarAccess.getOperationAccess().getNameAssignment_2(), "rule__Operation__NameAssignment_2");
					put(grammarAccess.getOperationAccess().getParamsAssignment_4_0(), "rule__Operation__ParamsAssignment_4_0");
					put(grammarAccess.getOperationAccess().getParamsAssignment_4_1_1(), "rule__Operation__ParamsAssignment_4_1_1");
					put(grammarAccess.getOperationAccess().getTypeAssignment_7(), "rule__Operation__TypeAssignment_7");
					put(grammarAccess.getParameterAccess().getNameAssignment_0(), "rule__Parameter__NameAssignment_0");
					put(grammarAccess.getParameterAccess().getTypeAssignment_1(), "rule__Parameter__TypeAssignment_1");
					put(grammarAccess.getTypeRefAccess().getReferencedAssignment_0(), "rule__TypeRef__ReferencedAssignment_0");
					put(grammarAccess.getTypeRefAccess().getMultiAssignment_1(), "rule__TypeRef__MultiAssignment_1");
					put(grammarAccess.getTypeRefAccess().getOptionAssignment_2(), "rule__TypeRef__OptionAssignment_2");
					put(grammarAccess.getAnnotationsAccess().getAnnotationsAssignment_2(), "rule__Annotations__AnnotationsAssignment_2");
					put(grammarAccess.getAnnotationsAccess().getAnnotationsAssignment_3_1(), "rule__Annotations__AnnotationsAssignment_3_1");
					put(grammarAccess.getAnnotationAccess().getKeyAssignment_0(), "rule__Annotation__KeyAssignment_0");
					put(grammarAccess.getAnnotationAccess().getValueAssignment_2(), "rule__Annotation__ValueAssignment_2");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			fr.chaunier.xtext.om.ui.contentassist.antlr.internal.InternalOmDslParser typedParser = (fr.chaunier.xtext.om.ui.contentassist.antlr.internal.InternalOmDslParser) parser;
			typedParser.entryRuleDomainModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public OmDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(OmDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
