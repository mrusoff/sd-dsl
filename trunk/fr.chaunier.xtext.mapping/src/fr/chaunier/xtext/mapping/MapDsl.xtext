grammar fr.chaunier.xtext.mapping.MapDsl with org.eclipse.xtext.common.Terminals

generate mapDsl "http://www.chaunier.fr/xtext/mapping/MapDsl"

import  "platform:/resource/fr.chaunier.xtext.omcst.om/src-gen/fr/chaunier/xtext/omcst/om/OmcstDsl.ecore" as mm 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore 


ModelMap :
	'model' name=ID (documentation=STRING)?
	'Entity source' entityFrom=[mm::Entity|QualifiedName] 'Entity target' entityTo=[mm::Entity|QualifiedName] 
	imports+=Import*
	actions+=Action*;
	
Import:
	'import' importedNamespace=QualifiedNameWithWildCard;

QualifiedNameWithWildCard:
	QualifiedName '.*'?;

QualifiedName:
	ID ('.' ID)*;


Action : 
	FunctionDef | RuleDef | MapGroup  
; 

MapGroup : 'map' name=ID '{' 
	(featurePath+=FeatureAll)*	
'}'
;

FeatureAll :
	FeatureSet | FeaturePath
;

FeatureSet :
	'set' in=InOut path=Path '=' value = TerminalExpression
;

FeaturePath :
	from=FeaturePathFrom to=FeaturePathTo ('rule' rule=[RuleDef] args+=STRING*)?
;

FeaturePathFrom :
	'from' path=Path 
;

FeaturePathTo :
	'to' path=Path
;

Path:
	attribute=[mm::Attribute] ({PathParam.target=current} '.' refAttribute=[mm::Attribute])* 
	;

RuleDef:
	'define rule' name=ID ('op' operation=STRING)? //( 'args' args+=STRING*)? 
	//(documentation=STRING)?
;

enum InOut:
	in="In" | out="Out" ;

FunctionDef: 
	'fonction' name=ID '{'
		params+=FunctionParam* 
	'}'
;

FunctionParam: 
	in=InOut path=Path
;

TerminalExpression:
   int = IntVar |
   number = NumberVar |
   null = NullVar |
   bool = BoolVar |
   string = StringVar //| 
//   enumm = EnumVar  
;

IntVar : value = BIGINT;
NumberVar : value = NUMBER;
StringVar : value = STRING;
NullVar : value = 'null';
BoolVar : value = 'true' | 'false';

terminal BIGINT returns ecore::EBigInteger:
	('0'..'9')*;

terminal NUMBER returns ecore::EBigDecimal:
	('0'..'9')* ('.' ('0'..'9')+)?;
	
terminal DATE returns ecore::EDate : ('0'..'1') '0'..'9' '.' '0'..'3' '0'..'9' '.'  '0'..'9' '0'..'9' '0'..'9' '0'..'9';

terminal INT returns ecore::EInt:
	'this one has been deactivated';

	