«IMPORT ecore»
«EXTENSION fr::telintrans::model::utils::utils»


«DEFINE EClassTemplate FOR EClassifier-»
«ENDDEFINE»

«DEFINE EDataTypeTemplate FOR EClassifier-»
«ENDDEFINE»

«DEFINE EClassTemplate FOR EClass»

h3(#«name»). Class Name : «name» _xsd : «getXSDName(this)»_ 

p{color:blue}. «getDocumentation(this)»
			«IF this.eSuperTypes.exists(sup|sup!=null)»
			
*Super types* «getClassifierListLinked(this.eSuperTypes," , ")»
«ENDIF-»
«REM»«FOREACH eAllSuperTypes AS SuperType-»«SuperType.name» «ENDFOREACH-»
«ENDREM»
			«IF this.eAllAttributes.exists(att|att != null)»
h4. Attributes

table{border:1px solid black}.
|_.xsd|_.|_. Name |_. Type |_. Cardinality |_. Documentation  | 
				«FOREACH eAttributes AS eAttribute-»
«IF isXSDElement(eAttribute)-»|!icons/full/obj16/XSDElementDeclaration.gif!«ELSE»|!icons/full/obj16/XSDAttributeDeclaration.gif!«ENDIF-»|!icons/obj16/Attribute.gif!| «eAttribute.name» | "«eAttribute.eAttributeType.name»":«eAttribute.eAttributeType.ePackage.name+".html#"+eAttribute.eAttributeType.name» | «getCardinality(eAttribute)» |«getDocumentation(eAttribute)»| 
				«ENDFOREACH»
			«ENDIF»
			
			«IF this.eAllReferences.exists(ref|ref != null)»
h4. References



table{border:1px solid black}.
|_.xsd|_.|_. Name |_. Type  |_. Ordered |_. Cardinality |_. Documentation |
				«FOREACH eReferences AS eReference-»
«IF isXSDElement(eReference)-»|!icons/full/obj16/XSDElementDeclaration.gif!«ELSE»|!icons/full/obj16/XSDAttributeDeclaration.gif!«ENDIF-»|!icons/obj16/Reference.gif!| «eReference.name»	| "«eReference.eType.name»":«eReference.eType.ePackage.name+".html#"+eReference.eType.name» | «eReference.ordered» | «getCardinality(eReference)» | «getDocumentation(eReference)» |
				«ENDFOREACH»
			«ENDIF»

			«IF this.eOperations.exists(op|op != null)»
				«FOREACH eAllOperations AS eOperation»
				«ENDFOREACH»

			«ENDIF»
			
«ENDDEFINE»


«DEFINE EParameterTemplate FOR EParameter-»
	«name»:«eType.name»
«ENDDEFINE»

«DEFINE EDataTypeTemplate FOR EDataType-»
«IF this.instanceClassName == null || ! this.instanceClassName.matches("org.eclipse.emf.common.util.Enumerator")»

h3(#«name»). DataType Name : «name» _xsd «getXSDName(this)»_

p{color:blue}. «getDocumentation(this)»

«IF getXSDBaseType()!= null-»
Type : «getXSDBaseType()»
«ENDIF-» 
«IF getXSDMinLength()!= null-»
!icons/full/obj16/XSDMaxLengthFacet.gif! Min Lengh : «getXSDMinLength()»
«ENDIF-» 
«IF getXSDMaxLength()!= null-»
!icons/full/obj16/XSDMinLengthFacet.gif! Max Lengh : «getXSDMaxLength()»
«ENDIF-» 
«IF getXSDLength()!= null-»
!icons/full/obj16/XSDLengthFacet.gif! Lengh : «getXSDLength()»
«ENDIF-» 
«IF getXSDPattern()!= null-»
!icons/full/obj16/XSDPatternFacet.gif! Pattern : «getXSDPattern()»
«ENDIF-» 

«ENDIF-»

«ENDDEFINE»

«DEFINE EDataTypeTemplate FOR EEnum-»

h3(#«name»). Enum Name : «name» _xsd : «getXSDName(this)»_

p{color:blue}. «getDocumentation(this)»

«REM»
	«EXPAND ecore2TextileTemplate::EDataTypeTemplate FOREACH eLiterals»
«ENDREM»

	«IF this.eLiterals.exists(op|op != null)»
table{border:1px solid black}.
|_. Value |_. Name |_. Description |
	«FOREACH this.eLiterals AS eEnumLiteral-»
| «eEnumLiteral»
	«ENDFOREACH»
	«ENDIF»

h4. default : «this.defaultValue» 

«ENDDEFINE»

«DEFINE EDataTypeTemplate FOR EEnumLiteral-»
«REM»
	«trace(this)» 
«ENDREM»
«ENDDEFINE»

