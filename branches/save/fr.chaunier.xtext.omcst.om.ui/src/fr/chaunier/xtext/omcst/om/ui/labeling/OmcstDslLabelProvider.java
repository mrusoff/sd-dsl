/*
* generated by Xtext
*/
package fr.chaunier.xtext.omcst.om.ui.labeling;

import static org.eclipse.xtext.util.Strings.notNull;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider;
import org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider;

import com.google.inject.Inject;

import fr.chaunier.xtext.omcst.om.omcstDsl.Attribute;

/**
 * Provides labels for a EObjects.
 * 
 * see http://www.eclipse.org/Xtext/documentation/latest/xtext.html#labelProvider
 */
public class OmcstDslLabelProvider extends DefaultEObjectLabelProvider {

	@Inject
	public OmcstDslLabelProvider(AdapterFactoryLabelProvider delegate) {
		super(delegate);
	}

	@Override
	protected Object doGetImage(Object element) {
		if (element instanceof EObject) {
			return ((EObject) element).eClass().getName() + ".gif";
		}
		return super.doGetImage(element);
	}

	public String text(Attribute property) {
		StringBuilder builder = new StringBuilder();
		builder.append(notNull(property.getName()));
		builder.append(" : ");
		builder.append(property.getType());
		return builder.toString();
	}
	
/*
	//Labels and icons can be computed like this:
	
	String text(MyModel ele) {
	  return "my "+ele.getName();
	}
	 
    String image(MyModel ele) {
      return "MyModel.gif";
    }
*/
}
