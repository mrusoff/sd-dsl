/*
* generated by Xtext
*/
grammar InternalMapDsl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package fr.chaunier.xtext.map.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package fr.chaunier.xtext.map.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import fr.chaunier.xtext.map.services.MapDslGrammarAccess;

}

@parser::members {

 	private MapDslGrammarAccess grammarAccess;
 	
    public InternalMapDslParser(TokenStream input, MapDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected MapDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='model' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getModelAccess().getModelKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModelRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		lv_documentation_2_0=RULE_STRING
		{
			newLeafNode(lv_documentation_2_0, grammarAccess.getModelAccess().getDocumentationSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModelRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"documentation",
        		lv_documentation_2_0, 
        		"STRING");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getImportsImportParserRuleCall_3_0()); 
	    }
		lv_imports_3_0=ruleImport		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"imports",
        		lv_imports_3_0, 
        		"Import");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getRulesRuleParserRuleCall_4_0()); 
	    }
		lv_rules_4_0=ruleRule		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"rules",
        		lv_rules_4_0, 
        		"Rule");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getFuctionsFuctionParserRuleCall_5_0()); 
	    }
		lv_fuctions_5_0=ruleFuction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"fuctions",
        		lv_fuctions_5_0, 
        		"Fuction");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getMappingModulesMappingModuleParserRuleCall_6_0()); 
	    }
		lv_mappingModules_6_0=ruleMappingModule		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"mappingModules",
        		lv_mappingModules_6_0, 
        		"MappingModule");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getRootsRootModuleParserRuleCall_7_0()); 
	    }
		lv_roots_7_0=ruleRootModule		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		set(
       			$current, 
       			"roots",
        		lv_roots_7_0, 
        		"RootModule");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	 iv_ruleImport=ruleImport 
	 { $current=$iv_ruleImport.current; } 
	 EOF 
;

// Rule Import
ruleImport returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='import' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildCardParserRuleCall_1_0()); 
	    }
		lv_importedNamespace_1_0=ruleQualifiedNameWithWildCard		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImportRule());
	        }
       		set(
       			$current, 
       			"importedNamespace",
        		lv_importedNamespace_1_0, 
        		"QualifiedNameWithWildCard");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleQualifiedNameWithWildCard
entryRuleQualifiedNameWithWildCard returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameWithWildCardRule()); } 
	 iv_ruleQualifiedNameWithWildCard=ruleQualifiedNameWithWildCard 
	 { $current=$iv_ruleQualifiedNameWithWildCard.current.getText(); }  
	 EOF 
;

// Rule QualifiedNameWithWildCard
ruleQualifiedNameWithWildCard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQualifiedNameWithWildCardAccess().getQualifiedNameParserRuleCall_0()); 
    }
    this_QualifiedName_0=ruleQualifiedName    {
		$current.merge(this_QualifiedName_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(
	kw='.*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameWithWildCardAccess().getFullStopAsteriskKeyword_1()); 
    }
)?)
    ;





// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); } 
	 iv_ruleQualifiedName=ruleQualifiedName 
	 { $current=$iv_ruleQualifiedName.current.getText(); }  
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;





// Entry rule entryRuleRootModule
entryRuleRootModule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRootModuleRule()); }
	 iv_ruleRootModule=ruleRootModule 
	 { $current=$iv_ruleRootModule.current; } 
	 EOF 
;

// Rule RootModule
ruleRootModule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='root' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRootModuleAccess().getRootKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRootModuleRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getRootModuleAccess().getRootRefMappingModuleCrossReference_1_0()); 
	}

)
)(
(
		lv_documentation_2_0=RULE_STRING
		{
			newLeafNode(lv_documentation_2_0, grammarAccess.getRootModuleAccess().getDocumentationSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRootModuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"documentation",
        		lv_documentation_2_0, 
        		"STRING");
	    }

)
)?)
;





// Entry rule entryRuleRule
entryRuleRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRuleRule()); }
	 iv_ruleRule=ruleRule 
	 { $current=$iv_ruleRule.current; } 
	 EOF 
;

// Rule Rule
ruleRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='define rule' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRuleAccess().getDefineRuleKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getRuleAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='op' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRuleAccess().getOpKeyword_2_0());
    }
(
(
		lv_operation_3_0=RULE_STRING
		{
			newLeafNode(lv_operation_3_0, grammarAccess.getRuleAccess().getOperationSTRINGTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"operation",
        		lv_operation_3_0, 
        		"STRING");
	    }

)
))?(	otherlv_4='args' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRuleAccess().getArgsKeyword_3_0());
    }
(
(
		lv_args_5_0=RULE_STRING
		{
			newLeafNode(lv_args_5_0, grammarAccess.getRuleAccess().getArgsSTRINGTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRuleRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"args",
        		lv_args_5_0, 
        		"STRING");
	    }

)
)*)?)
;





// Entry rule entryRuleFuction
entryRuleFuction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFuctionRule()); }
	 iv_ruleFuction=ruleFuction 
	 { $current=$iv_ruleFuction.current; } 
	 EOF 
;

// Rule Fuction
ruleFuction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='define fonction' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFuctionAccess().getDefineFonctionKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getFuctionAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFuctionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFuctionAccess().getInFuctionInParserRuleCall_2_0()); 
	    }
		lv_in_2_0=ruleFuctionIn		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFuctionRule());
	        }
       		add(
       			$current, 
       			"in",
        		lv_in_2_0, 
        		"FuctionIn");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getFuctionAccess().getOutFuctionOutParserRuleCall_3_0()); 
	    }
		lv_out_3_0=ruleFuctionOut		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFuctionRule());
	        }
       		add(
       			$current, 
       			"out",
        		lv_out_3_0, 
        		"FuctionOut");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		lv_documentation_4_0=RULE_STRING
		{
			newLeafNode(lv_documentation_4_0, grammarAccess.getFuctionAccess().getDocumentationSTRINGTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFuctionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"documentation",
        		lv_documentation_4_0, 
        		"STRING");
	    }

)
)?)
;





// Entry rule entryRuleFuctionIn
entryRuleFuctionIn returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFuctionInRule()); }
	 iv_ruleFuctionIn=ruleFuctionIn 
	 { $current=$iv_ruleFuctionIn.current; } 
	 EOF 
;

// Rule FuctionIn
ruleFuctionIn returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='in' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFuctionInAccess().getInKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFuctionInRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getFuctionInAccess().getInEntityEntityCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFuctionInAccess().getLeftSquareBracketKeyword_2());
    }
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFuctionInRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getFuctionInAccess().getInAttributeAttributeCrossReference_3_0_0()); 
	}

)
)((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getFuctionInAccess().getNestedInTransformationParameterTargetAction_3_1_0(),
            $current);
    }
)	otherlv_5='.' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getFuctionInAccess().getFullStopKeyword_3_1_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFuctionInRule());
	        }
        }
	otherlv_6=RULE_ID
	{
		newLeafNode(otherlv_6, grammarAccess.getFuctionInAccess().getInRefAttributeAttributeCrossReference_3_1_2_0()); 
	}

)
))*)?	otherlv_7=']' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getFuctionInAccess().getRightSquareBracketKeyword_4());
    }
)
;





// Entry rule entryRuleFuctionOut
entryRuleFuctionOut returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFuctionOutRule()); }
	 iv_ruleFuctionOut=ruleFuctionOut 
	 { $current=$iv_ruleFuctionOut.current; } 
	 EOF 
;

// Rule FuctionOut
ruleFuctionOut returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='out' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFuctionOutAccess().getOutKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFuctionOutRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getFuctionOutAccess().getOutEntityEntityCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFuctionOutAccess().getLeftSquareBracketKeyword_2());
    }
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFuctionOutRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getFuctionOutAccess().getOutAttributeAttributeCrossReference_3_0_0()); 
	}

)
)((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getFuctionOutAccess().getNestedOutTransformationParameterTargetAction_3_1_0(),
            $current);
    }
)	otherlv_5='.' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getFuctionOutAccess().getFullStopKeyword_3_1_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFuctionOutRule());
	        }
        }
	otherlv_6=RULE_ID
	{
		newLeafNode(otherlv_6, grammarAccess.getFuctionOutAccess().getOutRefAttributeAttributeCrossReference_3_1_2_0()); 
	}

)
))*)?	otherlv_7=']' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getFuctionOutAccess().getRightSquareBracketKeyword_4());
    }
)
;





// Entry rule entryRuleMappingModule
entryRuleMappingModule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMappingModuleRule()); }
	 iv_ruleMappingModule=ruleMappingModule 
	 { $current=$iv_ruleMappingModule.current; } 
	 EOF 
;

// Rule MappingModule
ruleMappingModule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='module' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMappingModuleAccess().getModuleKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getMappingModuleAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMappingModuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='source' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMappingModuleAccess().getSourceKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMappingModuleRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getMappingModuleAccess().getEntitySourceEntityCrossReference_3_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='target' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getMappingModuleAccess().getTargetKeyword_4());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMappingModuleRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getMappingModuleAccess().getEntityTargetEntityCrossReference_5_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_documentation_6_0=RULE_STRING
		{
			newLeafNode(lv_documentation_6_0, grammarAccess.getMappingModuleAccess().getDocumentationSTRINGTerminalRuleCall_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMappingModuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"documentation",
        		lv_documentation_6_0, 
        		"STRING");
	    }

)
)?	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getMappingModuleAccess().getLeftCurlyBracketKeyword_7());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getMappingModuleAccess().getMappedFeaturesFeatureMapParserRuleCall_8_0_0()); 
	    }
		lv_mappedFeatures_8_0=ruleFeatureMap		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMappingModuleRule());
	        }
       		add(
       			$current, 
       			"mappedFeatures",
        		lv_mappedFeatures_8_0, 
        		"FeatureMap");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_9=';' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getMappingModuleAccess().getSemicolonKeyword_8_1());
    }
)?)*	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getMappingModuleAccess().getRightCurlyBracketKeyword_9());
    }
)
;





// Entry rule entryRuleFeatureMap
entryRuleFeatureMap returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFeatureMapRule()); }
	 iv_ruleFeatureMap=ruleFeatureMap 
	 { $current=$iv_ruleFeatureMap.current; } 
	 EOF 
;

// Rule FeatureMap
ruleFeatureMap returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((	otherlv_0='fuction' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFeatureMapAccess().getFuctionKeyword_0_0_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeatureMapRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getFeatureMapAccess().getFuctionMapFuctionCrossReference_0_0_1_0()); 
	}

)
))
    |(	otherlv_2='map atribute' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFeatureMapAccess().getMapAtributeKeyword_0_1_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeatureMapRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getFeatureMapAccess().getAttributeSourceAttributeCrossReference_0_1_1_0()); 
	}

)
)	otherlv_4='->' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getFeatureMapAccess().getHyphenMinusGreaterThanSignKeyword_0_1_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeatureMapRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getFeatureMapAccess().getAttributeTargetAttributeCrossReference_0_1_3_0()); 
	}

)
)((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getFeatureMapAccess().getNestedTransformationParameterTargetAction_0_1_4_0(),
            $current);
    }
)	otherlv_7='.' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getFeatureMapAccess().getFullStopKeyword_0_1_4_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeatureMapRule());
	        }
        }
	otherlv_8=RULE_ID
	{
		newLeafNode(otherlv_8, grammarAccess.getFeatureMapAccess().getRefAttributeAttributeCrossReference_0_1_4_2_0()); 
	}

)
))*)
    |(	otherlv_9='map module' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getFeatureMapAccess().getMapModuleKeyword_0_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeatureMapRule());
	        }
        }
	otherlv_10=RULE_ID
	{
		newLeafNode(otherlv_10, grammarAccess.getFeatureMapAccess().getWithModuleMappingModuleCrossReference_0_2_1_0()); 
	}

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeatureMapRule());
	        }
        }
	otherlv_11=RULE_ID
	{
		newLeafNode(otherlv_11, grammarAccess.getFeatureMapAccess().getAttributeSourcesAttributeCrossReference_0_2_2_0()); 
	}

)
)	otherlv_12='->' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getFeatureMapAccess().getHyphenMinusGreaterThanSignKeyword_0_2_3());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeatureMapRule());
	        }
        }
	otherlv_13=RULE_ID
	{
		newLeafNode(otherlv_13, grammarAccess.getFeatureMapAccess().getAttributeTargetAttributeCrossReference_0_2_4_0()); 
	}

)
)((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getFeatureMapAccess().getNestedTransformationParameterTargetAction_0_2_5_0(),
            $current);
    }
)	otherlv_15='.' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getFeatureMapAccess().getFullStopKeyword_0_2_5_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeatureMapRule());
	        }
        }
	otherlv_16=RULE_ID
	{
		newLeafNode(otherlv_16, grammarAccess.getFeatureMapAccess().getRefAttributeAttributeCrossReference_0_2_5_2_0()); 
	}

)
))*)
    |(	otherlv_17='set <-' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getFeatureMapAccess().getSetKeyword_0_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeatureMapRule());
	        }
        }
	otherlv_18=RULE_ID
	{
		newLeafNode(otherlv_18, grammarAccess.getFeatureMapAccess().getAttributeSourceAttributeCrossReference_0_3_1_0()); 
	}

)
)	otherlv_19='=' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getFeatureMapAccess().getEqualsSignKeyword_0_3_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFeatureMapAccess().getExprExpressionParserRuleCall_0_3_3_0()); 
	    }
		lv_expr_20_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFeatureMapRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_20_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_21='set ->' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getFeatureMapAccess().getSetKeyword_0_4_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeatureMapRule());
	        }
        }
	otherlv_22=RULE_ID
	{
		newLeafNode(otherlv_22, grammarAccess.getFeatureMapAccess().getAttributeTargetAttributeCrossReference_0_4_1_0()); 
	}

)
)((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getFeatureMapAccess().getNestedTransformationParameterTargetAction_0_4_2_0(),
            $current);
    }
)	otherlv_24='.' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getFeatureMapAccess().getFullStopKeyword_0_4_2_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeatureMapRule());
	        }
        }
	otherlv_25=RULE_ID
	{
		newLeafNode(otherlv_25, grammarAccess.getFeatureMapAccess().getRefAttributeAttributeCrossReference_0_4_2_2_0()); 
	}

)
))*	otherlv_26='=' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getFeatureMapAccess().getEqualsSignKeyword_0_4_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFeatureMapAccess().getExprExpressionParserRuleCall_0_4_4_0()); 
	    }
		lv_expr_27_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFeatureMapRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_27_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_28='ignore <-' 
    {
    	newLeafNode(otherlv_28, grammarAccess.getFeatureMapAccess().getIgnoreKeyword_0_5_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeatureMapRule());
	        }
        }
	otherlv_29=RULE_ID
	{
		newLeafNode(otherlv_29, grammarAccess.getFeatureMapAccess().getAttributeSourceAttributeCrossReference_0_5_1_0()); 
	}

)
))
    |(	otherlv_30='ignore ->' 
    {
    	newLeafNode(otherlv_30, grammarAccess.getFeatureMapAccess().getIgnoreKeyword_0_6_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeatureMapRule());
	        }
        }
	otherlv_31=RULE_ID
	{
		newLeafNode(otherlv_31, grammarAccess.getFeatureMapAccess().getAttributeTargetAttributeCrossReference_0_6_1_0()); 
	}

)
)((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getFeatureMapAccess().getNestedTransformationParameterTargetAction_0_6_2_0(),
            $current);
    }
)	otherlv_33='.' 
    {
    	newLeafNode(otherlv_33, grammarAccess.getFeatureMapAccess().getFullStopKeyword_0_6_2_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeatureMapRule());
	        }
        }
	otherlv_34=RULE_ID
	{
		newLeafNode(otherlv_34, grammarAccess.getFeatureMapAccess().getRefAttributeAttributeCrossReference_0_6_2_2_0()); 
	}

)
))*))(	otherlv_35='rule' 
    {
    	newLeafNode(otherlv_35, grammarAccess.getFeatureMapAccess().getRuleKeyword_1_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeatureMapRule());
	        }
        }
	otherlv_36=RULE_ID
	{
		newLeafNode(otherlv_36, grammarAccess.getFeatureMapAccess().getRuleRuleCrossReference_1_1_0()); 
	}

)
))?(
(
		lv_documentation_37_0=RULE_STRING
		{
			newLeafNode(lv_documentation_37_0, grammarAccess.getFeatureMapAccess().getDocumentationSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeatureMapRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"documentation",
        		lv_documentation_37_0, 
        		"STRING");
	    }

)
)?)
;





// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	 iv_ruleExpression=ruleExpression 
	 { $current=$iv_ruleExpression.current; } 
	 EOF 
;

// Rule Expression
ruleExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_value_0_0=RULE_STRING
		{
			newLeafNode(lv_value_0_0, grammarAccess.getExpressionAccess().getValueSTRINGTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"STRING");
	    }

)
)
    |(
(
		lv_intValue_1_0=RULE_INT
		{
			newLeafNode(lv_intValue_1_0, grammarAccess.getExpressionAccess().getIntValueINTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"intValue",
        		lv_intValue_1_0, 
        		"INT");
	    }

)
))
;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


