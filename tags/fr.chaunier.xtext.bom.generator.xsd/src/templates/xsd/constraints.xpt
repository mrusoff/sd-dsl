«IMPORT fr::chaunier::xtext::bom::bomDsl»

«DEFINE const FOR Constraint-»
«ENDDEFINE»


«DEFINE const FOR BoolConstraint-»
          <xsd:element name="«((Attribute)eContainer()).name»" type="xsd:boolean" «EXPAND minMax FOR ((Attribute)eContainer()).type-»>
		    <xsd:annotation>
      			<xsd:documentation>«((Attribute)eContainer()).description»</xsd:documentation>
    		</xsd:annotation>
«ENDDEFINE»

«DEFINE const FOR StringConstraint-»
«IF constraintRef != null || constraintRef.minLen!=0 || constraintRef.maxLen != 0 || constraintRef.fixeLen != 0-» 
    	<xsd:element name="«((Attribute)eContainer()).name»" «EXPAND minMax FOR ((Attribute)eContainer()).type-»>
		    <xsd:annotation>
      			<xsd:documentation>«((Attribute)eContainer()).description»</xsd:documentation>
    		</xsd:annotation>
    			<xsd:simpleType>
    				<xsd:restriction base="xsd:string">
						«EXPAND stringConst FOR this»    				
    				</xsd:restriction>
    			</xsd:simpleType>
«ELSE-»    			
          <xsd:element name="«((Attribute)eContainer()).name»" type="xsd:string" «EXPAND minMax FOR ((Attribute)eContainer()).type-»>
«ENDIF-»          
«ENDDEFINE»

«DEFINE stringConst FOR StringConstraint-»
«IF constraintRef != null-»
					«IF constraintRef.minLen != 0» <xsd:minLength value= "«constraintRef.minLen»" />«ENDIF-»
					«IF constraintRef.maxLen != 0» <xsd:maxLength value= "«constraintRef.maxLen»" />«ENDIF-»
					«IF constraintRef.fixeLen != 0» <xsd:minLength value= "«constraintRef.fixeLen»"/> <xsd:maxLength value= "«constraintRef.fixeLen»"/> «ENDIF-»
«ENDIF»
«ENDDEFINE»
 
«DEFINE stringConst FOR IntegerConstraint-»
«IF constraintRef != null-»
					«IF constraintRef.minValue != 0» <xsd:minLength value= "«constraintRef.minValue»" />«ENDIF-»
					«IF constraintRef.maxValue != 0» <xsd:maxLength value= "«constraintRef.maxValue»" />«ENDIF-»
«ENDIF»
«ENDDEFINE»

«DEFINE stringConst FOR DecimalConstraint-»
«IF constraintRef != null-»
					«IF constraintRef.minValue != 0» <xsd:minLength value= "«constraintRef.minValue»" />«ENDIF-»
					«IF constraintRef.maxValue != 0» <xsd:maxLength value= "«constraintRef.maxValue»" />«ENDIF-»
«ENDIF»
«ENDDEFINE»

«DEFINE const FOR DateTimeConstraint-»
          <xsd:element name="«((Attribute)eContainer()).name»" type="xsd:datetime" «EXPAND minMax FOR ((Attribute)eContainer()).type-»>
«ENDDEFINE»

«DEFINE const FOR EnumerationConstraint-»
          <xsd:element name="«((Attribute)eContainer()).name»" type="xsd:string" «EXPAND minMax FOR ((Attribute)eContainer()).type-»>
«ENDDEFINE»

«DEFINE const FOR IntegerConstraint-»
«IF constraintRef != null-»
«IF constraintRef.minValue!=0 || constraintRef.minValue != 0-» 
    	<xsd:element name="«((Attribute)eContainer()).name»">
    			<xsd:simpleType>
    				<xsd:restriction base="xsd:integer" «EXPAND minMax FOR ((Attribute)eContainer()).type-»>
«EXPAND stringConst FOR this»    				
    				</xsd:restriction>
    			</xsd:simpleType>
«ELSE-»    			
          <xsd:element name="«((Attribute)eContainer()).name»" type="xsd:integer" >
«ENDIF»          
«ENDIF»          
«ENDDEFINE»

«DEFINE const FOR DecimalConstraint-»
«IF constraintRef != null-»
«IF constraintRef. minValue!=0 || constraintRef.minValue != 0-» 
    	<xsd:element name="«((Attribute)eContainer()).name»" «EXPAND minMax FOR ((Attribute)eContainer()).type-»>
    			<xsd:simpleType>
    				<xsd:restriction base="xsd:float" >
«EXPAND stringConst FOR this»    				
    				</xsd:restriction>
    			</xsd:simpleType>
«ELSE-»    			
          <xsd:element name="«((Attribute)eContainer()).name»" type="xsd:long" >
«ENDIF»          
«ENDIF»          
«ENDDEFINE»


«DEFINE minMax FOR TypeRef-»
«IF option»minOccurs="0"«ENDIF»
«IF multi-»maxOccurs="unbounded"«ENDIF-»
«ENDDEFINE»


