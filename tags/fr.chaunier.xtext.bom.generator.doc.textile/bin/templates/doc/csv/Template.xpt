«IMPORT fr::chaunier::xtext::bom::bomDsl»
«EXTENSION templates::doc::Extensions»
«EXTENSION fr::chaunier::model::utils::Indent»


«DEFINE root FOR PackageDeclaration»
«((String) GLOBALVAR rootObject)»
«EXPAND main(((String) GLOBALVAR rootObject)) FOR this» 
«ENDDEFINE»

«REM»
«EXTENSION org::eclipse::xtend::util::stdlib::globalvar»
«ENDREM»

«REM»
String implClassSuffix() : GLOBALVAR ImplClassSuffix;
// usage of the typed global var extension
ImplName(Class c) :
   name+implClassSuffix();
«ENDREM»


«DEFINE main(String nameSearch) FOR PackageDeclaration»
« IF !searchEntityByName(nameSearch).isEmpty»
«FILE name + " " + nameSearch + ".csv"-»
package ; prefix  ; uri
«name» ; «prefix» ; «namespace»

«EXPAND line FOREACH lines»
 
«FOREACH searchEntityByName(nameSearch) AS entity-»
Root : «entity.name»
structure ; cardinalités ; type ; contraintes ; constantes ; sémantique ; documentation

«EXPAND dump(0) FOR entity-»
«ENDFOREACH-»
«ENDFILE-»
«ENDIF»
«ENDDEFINE»

«DEFINE line FOR String-»
«this»
«ENDDEFINE»

«DEFINE dump(Integer indent) FOR AbstractElement-»
«ENDDEFINE»

«DEFINE dump(Integer indent) FOR DataType-»
«name-»
«ENDDEFINE»

«DEFINE dump(Integer indent) FOR Enumeration-»
[«FOREACH enumerationLiterals AS literal-»,«EXPAND literalDoc FOR literal-»«ENDFOREACH-»
]«ENDDEFINE»

«DEFINE literalDoc FOR EnumerationLiteral-»
«persistedValue»:«name-» 
«ENDDEFINE»

«DEFINE dump(Integer indent) FOR Entity-»  
«name-»
«IF superType!=null» extends «superType.name»«ENDIF-»;«description-»
«FOREACH superType.features AS feature-»
«EXPAND dump(indent+2) FOR feature-»
«ENDFOREACH-»
«FOREACH features AS feature-»
«EXPAND dump(indent+1) FOR feature-»
«ENDFOREACH-»
«ENDDEFINE»

«DEFINE dump(Integer indent) FOR Feature-»
«ENDDEFINE»

«DEFINE dump(Integer indent) FOR Attribute-»

«getIndentation(indent)»«name-»
;«EXPAND minMax FOR type-»
;«IF constraint==null»;«ELSE-»«EXPAND const FOR constraint-»«ENDIF-»
«EXPAND reference(indent) FOR type-»;«description-»
«ENDDEFINE»

«REM» 
definition des contraintes suivant les types
«ENDREM»

«REM» 
on ne passe jamais ici abstract
«ENDREM»
«DEFINE const FOR Constraint-»
«ENDDEFINE»

«DEFINE const FOR BoolConstraint-»
boolean ;;
«ENDDEFINE»


«DEFINE const FOR IntegerConstraint-»
entier ; «IF fixeLen==0 && maxLen==0 && maxValue ==0 && minValue==0-»«ELSEIF fixeLen!=0»lg.=«fixeLen»«ELSEIF minValue!=0»min=«minValue»«ENDIF»«IF maxValue !=0» max=«maxValue»«ENDIF-»«IF maxLen!=0» max len=«maxLen»«ENDIF-»
;«IF hasDefault» default=«defaultValue»«ENDIF-»
«IF isFixed» fixed=«fixedValue»«ENDIF-»
«ENDDEFINE»

«DEFINE const FOR DecimalConstraint-»
decimal ; «IF fixeLen==0 && maxLen==0 && maxValue==0 && minValue==0-»«ELSEIF fixeLen!=0»lg.=«fixeLen»«ELSEIF minValue!=0»min=«minValue»«ENDIF»«IF maxValue !=0» max=«maxValue»«ENDIF-»«IF maxLen!=0» max len=«maxLen»«ENDIF-»
;«IF hasDefault» default=«defaultValue»«ENDIF-»
«IF isFixed» fixed=«fixedValue»«ENDIF-»
«ENDDEFINE»

«DEFINE const FOR EnumerationConstraint-»
enum;«IF fixeLen!=0» lg.=«fixeLen»«ENDIF-»;«usage-»
«ENDDEFINE»

«DEFINE const FOR StringConstraint-»
carractère ; «IF fixeLen ==0 && minLen==0 && maxLen==0-»«ELSEIF fixeLen!=0»lg.=«fixeLen»«ELSEIF minLen!=0-»min=«minLen»«ENDIF»«IF maxLen!=0» max=«maxLen»«ENDIF-»
;«IF hasDefault» default=«defaultValue»«ENDIF-»
«IF isFixed» fixed=«fixedValue»«ENDIF-»
«ENDDEFINE»

«DEFINE const FOR DateTimeConstraint-»
datetime;; 
«ENDDEFINE»

«DEFINE minMax FOR TypeRef-»
«IF !option && !multi-»«ELSE»«IF option-»[0..«ELSE-»[1..«ENDIF-»«IF multi-»*]«ELSE-»1]«ENDIF»«ENDIF-»
«ENDDEFINE»

«DEFINE reference(Integer indent) FOR TypeRef-»
;«EXPAND dump(indent) FOR referenced-»«ENDDEFINE»
«ENDDEFINE»
